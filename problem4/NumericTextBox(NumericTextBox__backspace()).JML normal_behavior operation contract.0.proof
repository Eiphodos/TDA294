\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Oct 30 12:55:11 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:noRestriction
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=80000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Wed Oct 30 12:55:11 CET 2019
contract=NumericTextBox[NumericTextBox\\:\\:backspace()].JML normal_behavior operation contract.0
name=NumericTextBox[NumericTextBox\\:\\:backspace()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "David" ) (keyVersion "c934a1f554"))

(autoModeTime "1215")

(branch "dummy ID"
(rule "ifthenelse_true" (formula "1") (term "1,1,0,0,0,0,1,1") (newnames "self,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,1,0,0,2,0,0,0,0,1,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "8") (term "0,1,0,0,2,0,0,0,0,1,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,1,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "8") (term "0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,1,0,0,2,0,0,0,0,1,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "5"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "assignment" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "polySimp_sepNegMonomial" (formula "8") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_NumericTextBox" (formula "6") (inst "i=i") (inst "i_0=i_0") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "inInt" (formula "6") (term "1,0,0,1"))
   (rule "concrete_and_3" (formula "6") (term "0,0,1"))
   (rule "inInt" (formula "6") (term "1,0,0,1,0"))
   (rule "concrete_and_3" (formula "6") (term "0,0,1,0"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
   (rule "leq_literals" (formula "6") (term "0"))
   (rule "concrete_or_1" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
   (rule "mul_literals" (formula "5") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "mul_literals" (formula "5") (term "1"))
   (rule "nnf_imp2or" (formula "9") (term "0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "commute_and" (formula "8") (term "1,0"))
   (rule "cnf_rightDist" (formula "8") (term "0"))
   (rule "distr_forallAnd" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "commute_or" (formula "9") (term "0"))
   (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_backspace,savedHeapBefore_backspace"))
   (rule "simplifyUpdate2" (formula "13") (term "1"))
   (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_1" (formula "13") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "13") (term "1"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute_this" (formula "13") (term "1"))
   (rule "sequentialToParallel2" (formula "13"))
   (rule "simplifyUpdate3" (formula "13") (term "1,0"))
   (rule "equality_comparison_simple" (formula "13") (term "1"))
   (rule "sequentialToParallel2" (formula "13"))
   (rule "simplifyUpdate2" (formula "13"))
   (rule "simplifyUpdate3" (formula "13") (term "1,0"))
   (rule "applyOnElementary" (formula "13") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
   (rule "applyOnRigidFormula" (formula "13") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "13") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "13") (term "1,0,0,1,0"))
   (rule "inEqSimp_contradEq7" (formula "13") (term "0,0,1,0") (ifseqformula "6"))
   (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
   (rule "leq_literals" (formula "13") (term "0,0,0,1,0"))
   (rule "concrete_and_2" (formula "13") (term "0,0,1,0"))
   (rule "ifthenelse_false" (formula "13") (term "0,1,0"))
   (rule "arrayLengthNotNegative" (formula "7") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
   (rule "leq_literals" (formula "7") (term "0"))
   (rule "concrete_or_1" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthIsAnInt" (formula "7") (term "1"))
   (rule "inInt" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "ifElseSplit" (formula "13"))
   (branch "if x true"
      (rule "simplifyUpdate2" (formula "14"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "boolean_not_equal_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "applyOnPV" (formula "11") (term "0"))
      (rule "simplifyUpdate1" (formula "11") (term "1"))
      (rule "boolean_not_equal_2" (formula "11"))
      (rule "false_right" (formula "11"))
      (rule "postdecrement_attribute" (formula "13") (term "1") (inst "#v=n"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n"))
      (rule "assignment" (formula "13") (term "1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "eval_order_access4" (formula "13") (term "1") (inst "#v1=x") (inst "#v0=n_1"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "n_1"))
      (rule "assignment" (formula "13") (term "1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "applyOnElementary" (formula "13") (term "1,0"))
      (rule "applyOnPV" (formula "13") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
      (rule "compound_int_cast_expression" (formula "13") (term "1") (inst "#v=x_3"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
      (rule "remove_parentheses_right" (formula "13") (term "1"))
      (rule "compound_subtraction_1" (formula "13") (term "1") (inst "#v=x_4"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
      (rule "assignment_read_attribute" (formula "13") (term "1"))
      (branch "Normal Execution (n != null)"
         (rule "simplifyUpdate2" (formula "13"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "13"))
         (rule "simplifyUpdate1" (formula "13") (term "1"))
         (rule "applyOnPV" (formula "13") (term "0"))
         (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "13") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "0,0,1,0"))
         (rule "assignmentSubtractionInt" (formula "13") (term "1"))
         (rule "translateJavaSubInt" (formula "13") (term "0,0,1"))
         (rule "polySimp_elimSub" (formula "13") (term "0,0,1"))
         (rule "mul_literals" (formula "13") (term "1,0,0,1"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "applyOnElementary" (formula "13") (term "1,0"))
         (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "13") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "13") (term "1,0,1,0"))
         (rule "widening_identity_cast_5" (formula "13") (term "1"))
         (rule "assignment" (formula "13") (term "1"))
         (rule "sequentialToParallel2" (formula "13"))
         (rule "simplifyUpdate2" (formula "13"))
         (rule "simplifyUpdate3" (formula "13") (term "1,0"))
         (rule "applyOnElementary" (formula "13") (term "1,0"))
         (rule "applyOnPV" (formula "13") (term "0,1,0"))
         (rule "assignment_write_attribute" (formula "13") (term "1"))
         (branch "Normal Execution (n_1 != null)"
            (rule "simplifyUpdate2" (formula "13"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "13"))
            (rule "simplifyUpdate1" (formula "13") (term "1"))
            (rule "applyOnPV" (formula "13") (term "0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "3,0,1,0"))
            (rule "eval_order_array_access1" (formula "13") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr"))
            (rule "assignment_read_attribute_this" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,1,0"))
            (rule "eval_order_array_access2" (formula "13") (term "1") (inst "#v0=x") (inst "#ar1=x_arr_1"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_1"))
            (rule "assignment" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnPV" (formula "13") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_5"))
            (rule "assignment_read_attribute_this" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,1,0"))
            (rule "pullOutSelect" (formula "13") (term "0,1,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
            (rule "simplifySelectOfStore" (formula "1"))
            (rule "equalUnique" (formula "1") (term "0,1,0,0"))
            (rule "concrete_not_2" (formula "1") (term "1,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "1,0,0"))
            (rule "concrete_and_3" (formula "1") (term "0,0"))
            (rule "eqClose" (formula "1") (term "0,0"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "14") (term "0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eval_order_array_access3" (formula "13") (term "1") (inst "#v1=x_7") (inst "#v2=x_6") (inst "#v0=x_arr_2"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_2"))
            (rule "assignment" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnPV" (formula "13") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_6"))
            (rule "assignment" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnPV" (formula "13") (term "0,1,0"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_7"))
            (rule "assignment_read_attribute_this" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,1,0"))
            (rule "assignment_to_primitive_array_component" (formula "13") (term "1"))
            (branch "Normal Execution (x_arr_2 != null)"
               (rule "simplifyUpdate2" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "2"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "sequentialToParallel2" (formula "16"))
               (rule "simplifyUpdate2" (formula "16"))
               (rule "simplifyUpdate3" (formula "16") (term "1,0"))
               (rule "applyOnElementary" (formula "16") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "2"))
               (rule "applyOnPV" (formula "2") (term "0"))
               (rule "simplifyUpdate1" (formula "2") (term "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "applyOnRigidFormula" (formula "13"))
               (rule "applyOnPV" (formula "13") (term "0"))
               (rule "simplifyUpdate1" (formula "13") (term "1"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "3,0,1,0"))
               (rule "applyOnRigidTerm" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0,1"))
               (rule "applyOnRigidTerm" (formula "15") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,2,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,1") (ifseqformula "1"))
               (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "12"))
               (rule "concrete_or_2" (formula "7"))
               (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_8"))
               (rule "compound_inequality_comparison_1" (formula "14") (term "1") (inst "#v0=t"))
               (rule "variableDeclarationAssign" (formula "14") (term "1"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "t"))
               (rule "assignment_read_attribute_this" (formula "14") (term "1"))
               (rule "sequentialToParallel2" (formula "14"))
               (rule "simplifyUpdate3" (formula "14") (term "1,0"))
               (rule "applyOnElementary" (formula "14") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "inequality_comparison_simple" (formula "14") (term "1"))
               (rule "sequentialToParallel2" (formula "14"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate3" (formula "14") (term "1,0"))
               (rule "applyOnElementary" (formula "14") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
               (rule "ifSplit" (formula "14"))
               (branch "if x_8 true"
                  (rule "simplifyUpdate2" (formula "15"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "ifthenelse_concrete4" (formula "1"))
                  (rule "boolean_not_equal_2" (formula "1") (term "1"))
                  (rule "concrete_or_4" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "eval_order_access1" (formula "15") (term "1") (inst "#v0=t"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "t_1"))
                  (rule "assignment_read_attribute_this" (formula "15") (term "1"))
                  (rule "sequentialToParallel2" (formula "15"))
                  (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                  (rule "applyOnElementary" (formula "15") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
                  (rule "assignment_write_attribute" (formula "15") (term "1"))
                  (branch "Normal Execution (t_1 != null)"
                     (rule "simplifyUpdate2" (formula "15"))
                     (rule "sequentialToParallel2" (formula "16"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                     (rule "applyOnElementary" (formula "16") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "15"))
                     (rule "applyOnPV" (formula "15") (term "0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
                     (rule "methodCallEmpty" (formula "15") (term "1"))
                     (rule "tryEmpty" (formula "15") (term "1"))
                     (rule "emptyModality" (formula "15") (term "1"))
                     (rule "applyOnRigidFormula" (formula "15"))
                     (rule "simplifyUpdate2" (formula "15") (term "1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0"))
                     (rule "simplifyUpdate2" (formula "15") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "15") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0"))
                     (rule "eqClose" (formula "15") (term "1,0"))
                     (rule "concrete_and_3" (formula "15") (term "0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0"))
                     (rule "simplifyUpdate2" (formula "15") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "15") (term "0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "15") (term "0,1,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,1,0"))
                     (rule "simplifyUpdate2" (formula "15") (term "1,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,1,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,1,0,0,1"))
                     (rule "applyOnPV" (formula "15") (term "0,1,1,0,0,1"))
                     (rule "eqSymm" (formula "15") (term "1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "15") (term "0,1,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,0,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,1,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,1,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,0,1"))
                     (rule "applyOnPV" (formula "15") (term "0,1,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "15") (term "1,0,0,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "15") (term "1,1,0,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,1,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,1,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "polySimp_homoEq" (formula "15") (term "0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "2,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0,0"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,0,0,0,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,1,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,1,1,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,1,1,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,1,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,2,0,0,1,0"))
                     (rule "applyOnPV" (formula "15") (term "0,0,2,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,2,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,2,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,1,0,0,0,0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,0,0,0,0,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0,0,0,0,1"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,1,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,0,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,1,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,0,0,1,1,0,0,0,1"))
                     (rule "applyOnPV" (formula "15") (term "0,0,0,1,1,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,1,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,0,0,0,0,0,1"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,1,0"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "0,2,0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,2,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor2" (formula "15") (term "0,0,1,1,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0,1,1,0"))
                     (rule "eqClose" (formula "15") (term "0,1,1,0"))
                     (rule "concrete_and_1" (formula "15") (term "1,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                     (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "12"))
                     (rule "concrete_not_2" (formula "15") (term "0,0,0"))
                     (rule "concrete_impl_1" (formula "15") (term "0,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "0,1,1,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "0,0,1,1,0,0,0,0,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "applyOnPV" (formula "15") (term "0,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,1,0,0,0,0,0,0,1"))
                     (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=TextBoxRenderer_contentChanged_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "eqClose" (formula "1") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "eqClose" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                     (rule "boolean_equal" (formula "16") (term "0,0"))
                     (rule "concrete_and_1" (formula "16") (term "0"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (rule "eqClose" (formula "1") (term "1,0,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0"))
                     (rule "equalUnique" (formula "1") (term "0,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true" (formula "1") (term "0"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                     (rule "eqClose" (formula "16") (term "0,0"))
                     (rule "concrete_and_1" (formula "16") (term "0"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "Class_invariant_axiom_for_NumericTextBox" (formula "15") (term "0") (inst "i=i") (inst "i_0=i_0") (inst "sk=sk_1") (ifseqformula "3"))
                     (branch "Use Axiom"
                        (rule "inInt" (formula "15") (term "1,0,0,1,0"))
                        (rule "concrete_and_3" (formula "15") (term "0,0,1,0"))
                        (rule "inInt" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "concrete_and_3" (formula "15") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "0,1,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,1,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "1,1,0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "1,1,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0,0"))
                        (rule "replace_known_right" (formula "15") (term "0,0,0,0,0") (ifseqformula "13"))
                        (rule "concrete_not_2" (formula "15") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "15") (term "0,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                        (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "6"))
                        (rule "concrete_and_1" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,1,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "15") (term "0,0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                        (rule "concrete_or_1" (formula "15") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "15") (term "0,0"))
                        (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                        (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0"))
                        (rule "andRight" (formula "15"))
                        (branch "Case 1"
                           (rule "andRight" (formula "15"))
                           (branch "Case 1"
                              (rule "allRight" (formula "15") (inst "sk=i_0_0"))
                              (rule "orRight" (formula "15"))
                              (rule "orRight" (formula "15"))
                              (rule "inEqSimp_geqRight" (formula "16"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "16"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "17") (term "0,1") (inst "selectSK=arr_1"))
                              (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "3"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "1") (term "0,0"))
                              (rule "ifthenelse_false" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "commute_and" (formula "18"))
                              (rule "allLeft" (formula "12") (inst "t=i_0_0"))
                              (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "12") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "12") (term "0,0"))
                              (rule "concrete_or_2" (formula "12") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                              (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0"))
                              (rule "leq_literals" (formula "12") (term "0,0"))
                              (rule "concrete_and_2" (formula "12") (term "0"))
                              (rule "concrete_or_2" (formula "12"))
                              (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "12"))
                              (rule "concrete_and_1" (formula "19"))
                              (rule "inEqSimp_leqRight" (formula "19"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "1"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (rule "concrete_or_1" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "allLeft" (formula "14") (inst "t=i_0_0"))
                              (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "14") (term "0,1"))
                              (rule "concrete_and_2" (formula "14") (term "1"))
                              (rule "concrete_or_4" (formula "14"))
                              (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "14") (term "0,0"))
                              (rule "concrete_and_2" (formula "14") (term "0"))
                              (rule "concrete_or_2" (formula "14"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "14"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_literals" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "15") (inst "sk=i_0"))
                              (rule "orRight" (formula "15"))
                              (rule "orRight" (formula "15"))
                              (rule "inEqSimp_leqRight" (formula "16"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "16"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (rule "eqClose" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,0,0"))
                              (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                              (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                              (rule "concrete_and_3" (formula "1") (term "0,0"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "18"))
                              (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "3"))
                              (rule "mul_literals" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "0,0"))
                              (rule "add_zero_left" (formula "9") (term "0"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "self.cursorPosition = 1 + i_0 TRUE"
                                 (rule "close" (formula "20") (ifseqformula "2"))
                              )
                              (branch "self.cursorPosition = 1 + i_0 FALSE"
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSymm" (formula "19"))
                                 (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "15"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "1"))
                                 (rule "add_literals" (formula "2") (term "0,1"))
                                 (rule "add_zero_left" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradEq3" (formula "15") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (rule "concrete_and_2" (formula "15"))
                                 (rule "false_right" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (rule "concrete_or_1" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "allLeft" (formula "14") (inst "t=i_0"))
                                 (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "19"))
                                 (rule "concrete_or_4" (formula "14"))
                                 (rule "inEqSimp_commuteGeq" (formula "14") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "14") (term "1"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                 (rule "leq_literals" (formula "14") (term "0,0"))
                                 (rule "concrete_and_2" (formula "14") (term "0"))
                                 (rule "concrete_or_2" (formula "14"))
                                 (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "14"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "15") (inst "sk=f_0"))
                           (rule "allRight" (formula "15") (inst "sk=o_0"))
                           (rule "orRight" (formula "15"))
                           (rule "orRight" (formula "15"))
                           (rule "orRight" (formula "15"))
                           (rule "orRight" (formula "15"))
                           (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "20"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "close" (formula "20") (ifseqformula "1"))
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (rule "concrete_eq_2" (formula "15") (term "1"))
                        (rule "concrete_eq_1" (formula "15") (term "0"))
                        (rule "neq_or" (formula "15"))
                        (rule "closeTrue" (formula "15"))
                     )
                  )
                  (branch "Null Reference (t_1 = null)"
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "close" (formula "13") (ifseqformula "1"))
                  )
               )
               (branch "if x_8 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "15"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "12"))
                  (rule "simplifyUpdate1" (formula "12") (term "1"))
                  (rule "applyOnPV" (formula "12") (term "0"))
                  (rule "ifthenelse_concrete4" (formula "12"))
                  (rule "boolean_not_equal_2" (formula "12") (term "1"))
                  (rule "concrete_or_4" (formula "12"))
                  (rule "notRight" (formula "12"))
                  (rule "methodCallEmpty" (formula "15") (term "1"))
                  (rule "tryEmpty" (formula "15") (term "1"))
                  (rule "emptyModality" (formula "15") (term "1"))
                  (rule "applyOnRigidFormula" (formula "15"))
                  (rule "simplifyUpdate2" (formula "15") (term "1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0"))
                  (rule "simplifyUpdate2" (formula "15") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "15") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "15") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0"))
                  (rule "eqClose" (formula "15") (term "1,0"))
                  (rule "concrete_and_3" (formula "15") (term "0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0"))
                  (rule "simplifyUpdate2" (formula "15") (term "0,1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,1"))
                  (rule "simplifyUpdate2" (formula "15") (term "0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,1,0"))
                  (rule "simplifyUpdate2" (formula "15") (term "1,1,1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,0,1,1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,1,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,1,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,1,0,0,1"))
                  (rule "applyOnPV" (formula "15") (term "0,1,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "eqSymm" (formula "15") (term "1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,0,1"))
                  (rule "simplifyUpdate2" (formula "15") (term "0,1,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,1,0,1,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,0,1,1,0"))
                  (rule "polySimp_homoEq" (formula "15") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "2,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,0,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,1,0,0,1"))
                  (rule "applyOnPV" (formula "15") (term "0,1,1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,0,0,1"))
                  (rule "simplifyUpdate2" (formula "15") (term "1,1,0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,0,1"))
                  (rule "simplifyUpdate2" (formula "15") (term "1,0,0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,1,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,1,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,2,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,2,0,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,2,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,2,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,1,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,1,1,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,1,1,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,1,0"))
                  (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "1,0,0,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "1,0,0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,2,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "0,2,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,2,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor2" (formula "15") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "15") (term "1,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "15") (term "0,0,1,1,0"))
                  (rule "eqClose" (formula "15") (term "0,1,1,0"))
                  (rule "concrete_and_1" (formula "15") (term "1,1,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                  (rule "concrete_not_1" (formula "15") (term "0,0,0"))
                  (rule "concrete_impl_2" (formula "15") (term "0,0"))
                  (rule "concrete_and_1" (formula "15") (term "0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,0,0,0,0,1"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,1,0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,0,0,0,0,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "15") (term "1,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,1,0,0,0,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,1,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,0,1,1,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,1,0,0,0,1"))
                  (rule "applyOnPV" (formula "15") (term "0,0,0,1,1,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,0,0,0,0,0,1"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,0,0,0,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,0,0,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,1,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "0,0,1,1,0,0,0,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "applyOnPV" (formula "15") (term "0,1,0,1,1,0,0,0,0,0,0,1"))
                  (rule "applyEq" (formula "15") (term "1,0,1,0,0,0,0,1") (ifseqformula "1"))
                  (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "eqClose" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                  (rule "eqClose" (formula "16") (term "0,0"))
                  (rule "concrete_and_1" (formula "16") (term "0"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_NumericTextBox" (formula "15") (term "0") (inst "i=i") (inst "i_0=i_0") (inst "sk=sk_1") (ifseqformula "4"))
                  (branch "Use Axiom"
                     (rule "inInt" (formula "15") (term "1,0,0,1,0"))
                     (rule "concrete_and_3" (formula "15") (term "0,0,1,0"))
                     (rule "inInt" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "concrete_and_3" (formula "15") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "0,1,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,1,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet0010_0" (formula "15") (term "1,1,0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "1,1,0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,1,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,0,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,1,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "15") (term "0,0,0,0,0") (ifseqformula "13"))
                     (rule "concrete_not_2" (formula "15") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "15") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
                     (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "7"))
                     (rule "concrete_and_1" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,1,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                     (rule "inEqSimp_subsumption0" (formula "15") (term "0,0,0") (ifseqformula "9"))
                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                     (rule "qeq_literals" (formula "15") (term "0,0,0,0"))
                     (rule "concrete_or_1" (formula "15") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "15") (term "0,0"))
                     (rule "nnf_imp2or" (formula "15") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "15") (term "0,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "andRight" (formula "15"))
                     (branch "Case 1"
                        (rule "andRight" (formula "15"))
                        (branch "Case 1"
                           (rule "allRight" (formula "15") (inst "sk=i_0_0"))
                           (rule "orRight" (formula "15"))
                           (rule "orRight" (formula "15"))
                           (rule "inEqSimp_geqRight" (formula "16"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "16"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "17") (term "0,1") (inst "selectSK=arr_1"))
                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "eqClose" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "3"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "18") (term "0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "18") (term "0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "commute_and" (formula "18"))
                           (rule "allLeft" (formula "13") (inst "t=i_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "13") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "13") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "13") (term "0,0"))
                           (rule "concrete_or_2" (formula "13") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0"))
                           (rule "leq_literals" (formula "13") (term "0,0"))
                           (rule "concrete_and_2" (formula "13") (term "0"))
                           (rule "concrete_or_2" (formula "13"))
                           (rule "replace_known_left" (formula "19") (term "0") (ifseqformula "13"))
                           (rule "concrete_and_1" (formula "19"))
                           (rule "inEqSimp_leqRight" (formula "19"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (rule "concrete_or_1" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "allLeft" (formula "15") (inst "t=i_0_0"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "15") (term "0,0,0"))
                           (rule "concrete_and_2" (formula "15") (term "0,0"))
                           (rule "concrete_or_2" (formula "15") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "15") (term "0,1"))
                           (rule "concrete_and_2" (formula "15") (term "1"))
                           (rule "concrete_or_4" (formula "15"))
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "15"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "15") (inst "sk=i_0"))
                           (rule "orRight" (formula "15"))
                           (rule "orRight" (formula "15"))
                           (rule "inEqSimp_leqRight" (formula "16"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "eqClose" (formula "1") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "18"))
                           (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                           (rule "mul_literals" (formula "10") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "10") (term "0"))
                           (rule "add_literals" (formula "10") (term "0,0"))
                           (rule "add_zero_left" (formula "10") (term "0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self.cursorPosition = 1 + i_0 TRUE"
                              (rule "close" (formula "20") (ifseqformula "2"))
                           )
                           (branch "self.cursorPosition = 1 + i_0 FALSE"
                              (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "19"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "16"))
                              (rule "polySimp_addAssoc" (formula "2") (term "1"))
                              (rule "add_literals" (formula "2") (term "0,1"))
                              (rule "add_zero_left" (formula "2") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "16") (ifseqformula "2"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (rule "concrete_and_2" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                              (rule "mul_literals" (formula "10") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_1" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "allLeft" (formula "15") (inst "t=i_0"))
                              (rule "replace_known_right" (formula "15") (term "1") (ifseqformula "19"))
                              (rule "concrete_or_4" (formula "15"))
                              (rule "inEqSimp_commuteGeq" (formula "15") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "1"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                              (rule "mul_literals" (formula "15") (term "0,1,1"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                              (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1"))
                              (rule "leq_literals" (formula "15") (term "0,1"))
                              (rule "concrete_and_2" (formula "15") (term "1"))
                              (rule "concrete_or_4" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "1"))
                              (rule "andLeft" (formula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "15"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                              (rule "add_literals" (formula "15") (term "1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0"))
                              (rule "add_literals" (formula "15") (term "0"))
                              (rule "leq_literals" (formula "15"))
                              (rule "closeFalse" (formula "15"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "15") (inst "sk=f_0"))
                        (rule "allRight" (formula "15") (inst "sk=o_0"))
                        (rule "orRight" (formula "15"))
                        (rule "orRight" (formula "15"))
                        (rule "orRight" (formula "15"))
                        (rule "orRight" (formula "15"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_0_0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "17"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "close" (formula "20") (ifseqformula "1"))
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (rule "concrete_eq_2" (formula "15") (term "1"))
                     (rule "concrete_eq_1" (formula "15") (term "0"))
                     (rule "neq_or" (formula "15"))
                     (rule "closeTrue" (formula "15"))
                  )
               )
            )
            (branch "Null Reference (x_arr_2 = null)"
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "close" (formula "12") (ifseqformula "1"))
            )
            (branch "Index Out of Bounds (x_arr_2 != null, but x_6 Out of Bounds!)"
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate2" (formula "1") (term "1"))
               (rule "applyOnRigidFormula" (formula "12"))
               (rule "simplifyUpdate1" (formula "12") (term "1"))
               (rule "applyOnPV" (formula "12") (term "0"))
               (rule "applyOnRigidFormula" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1,0"))
               (rule "simplifyUpdate1" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "1") (term "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1,1"))
               (rule "applyOnPV" (formula "1") (term "0,1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
               (rule "add_literals" (formula "1") (term "0,0,1"))
               (rule "add_zero_left" (formula "1") (term "0,1"))
               (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
               (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "8"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (rule "concrete_and_2" (formula "1") (term "0"))
               (rule "concrete_or_2" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (rule "concrete_and_2" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (n_1 = null)"
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "close" (formula "13") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (n = null)"
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "close" (formula "13") (ifseqformula "1"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (rule "concrete_eq_1" (formula "7") (term "0"))
   (rule "concrete_eq_2" (formula "7") (term "1"))
   (rule "neq_or" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)
}
