\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 28 01:18:53 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:noRestriction
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=80000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Oct 28 01:18:53 CET 2019
contract=NumericTextBox[NumericTextBox\\:\\:clear()].JML normal_behavior operation contract.0
name=NumericTextBox[NumericTextBox\\:\\:clear()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "David" ) (keyVersion "c934a1f554"))

(autoModeTime "851")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,0,1,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_NumericTextBox" (formula "6") (inst "i=i") (inst "i_0=i_0") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
    (builtin "One Step Simplification" (formula "6"))
   (rule "translateJavaAddInt" (formula "6") (term "1,1,1,0,0"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "6"))
   (rule "polySimp_addComm0" (formula "7") (term "1"))
   (rule "inEqSimp_gtToGeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0,1,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
   (rule "times_zero_1" (formula "6") (term "0,0"))
   (rule "add_zero_left" (formula "6") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
   (rule "mul_literals" (formula "6") (term "1"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "nnf_imp2or" (formula "9") (term "0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,0"))
   (rule "commute_and" (formula "9") (term "1,0"))
   (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_clear,savedHeapBefore_clear"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "cnf_rightDist" (formula "9") (term "0"))
   (rule "distr_forallAnd" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "commute_or" (formula "10") (term "0"))
   (rule "for_to_while" (formula "14") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
   (rule "variableDeclarationAssign" (formula "14") (term "1"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "i"))
   (rule "assignment" (formula "14") (term "1"))
    (builtin "One Step Simplification" (formula "14"))
    (builtin "Loop Invariant" (formula "14") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
       (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")))
      (rule "qeq_literals" (formula "14") (term "0,0"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0,1"))
      (rule "add_zero_right" (formula "14") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "14") (term "0,1"))
      (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1"))
      (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "14") (term "0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "14") (term "0,1,0,0,1"))
       (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_geqRight" (formula "14"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
      (rule "applyEq" (formula "13") (term "1,0,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
      (rule "leq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
      (rule "qeq_literals" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "6"))
      (rule "add_literals" (formula "8") (term "1"))
      (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "8"))
      (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "7"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "7"))
      (rule "leq_literals" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "inEqSimp_or_tautInEq0" (formula "8") (term "0,0"))
      (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
      (rule "qeq_literals" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "inEqSimp_or_tautInEq2" (formula "9") (term "0,0"))
      (rule "add_literals" (formula "9") (term "1,1,0,0"))
      (rule "qeq_literals" (formula "9") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "inEqSimp_or_tautInEq0" (formula "8") (term "0,0"))
      (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
      (rule "qeq_literals" (formula "8") (term "1,0,0"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "1"))
      (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "6"))
       (builtin "One Step Simplification" (formula "5"))
      (rule "true_left" (formula "5"))
      (rule "arrayLengthIsAnInt" (formula "6") (term "0"))
       (builtin "One Step Simplification" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "arrayLengthNotNegative" (formula "6") (term "0"))
      (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
      (rule "qeq_literals" (formula "6"))
      (rule "closeFalse" (formula "6"))
   )
   (branch "Body Preserves Invariant"
       (builtin "One Step Simplification" (formula "16"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,1,1"))
      (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,1"))
      (rule "andLeft" (formula "13"))
      (rule "impRight" (formula "17"))
      (rule "andLeft" (formula "14"))
      (rule "eqSymm" (formula "19") (term "1,0,0,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "19") (term "0,1,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "15"))
      (rule "pullOutSelect" (formula "19") (term "0,1,0,1,1,1,0") (inst "selectSK=NumericTextBox_content_0"))
      (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "1"))
      (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "4")))
      (rule "eqSymm" (formula "1") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
      (rule "applyEqReverse" (formula "17") (term "1,0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "20") (term "0,1,0,1,1,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "19") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "exc_1"))
      (rule "assignment" (formula "19") (term "1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "variableDeclaration" (formula "19") (term "1") (newnames "thrownExc"))
      (rule "blockThrow" (formula "19") (term "1,0,0,1"))
      (rule "blockThrow" (formula "19") (term "1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "pullOutSelect" (formula "16") (term "1,1,0") (inst "selectSK=NumericTextBox_EMPTY_0"))
      (rule "simplifySelectOfAnon" (formula "16"))
       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "19")) (ifInst ""  (formula "3")))
      (rule "eqSymm" (formula "16") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "16") (term "0,0"))
      (rule "replace_known_right" (formula "16") (term "1,0,0") (ifseqformula "19"))
       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")))
      (rule "applyEqReverse" (formula "17") (term "1,1,0") (ifseqformula "16"))
      (rule "hideAuxiliaryEq" (formula "16"))
      (rule "boxToDiamond" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "19") (term "0,1,0,0,1,1,0,1"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
      (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "19") (term "1,0,0,0,1,0,0,1,1,0,1"))
      (rule "compound_less_than_comparison_2" (formula "16") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x"))
      (rule "assignment" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_1"))
      (rule "eval_order_access2" (formula "16") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "16") (term "1"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "replaceKnownSelect_taclet10_0" (formula "16") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "16") (term "0,1,0"))
      (rule "assignment_read_length" (formula "16") (term "1"))
      (branch "Normal Execution (x_arr != null)"
          (builtin "One Step Simplification" (formula "17"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "18")))
         (rule "false_right" (formula "16"))
         (rule "less_than_comparison_simple" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "arrayLengthIsAnInt" (formula "8") (term "1,1"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "emptyModality" (formula "16") (term "1"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "notRight" (formula "16"))
         (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0"))
         (rule "qeq_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_2"))
         (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_4"))
         (rule "eval_order_array_access6" (formula "18") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "18") (term "1"))
         (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr_1"))
         (rule "assignment_read_attribute_this" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "replaceKnownSelect_taclet10_0" (formula "18") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "18") (term "0,1,0"))
         (rule "assignment_read_length" (formula "18") (term "1"))
         (branch "Normal Execution (x_arr_1 != null)"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
            (rule "false_right" (formula "18"))
            (rule "less_than_comparison_simple" (formula "18") (term "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
            (rule "replace_known_left" (formula "18") (term "0,0,1,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "2"))
            (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifSplit" (formula "19"))
            (branch "if x_2 true"
                (builtin "One Step Simplification" (formula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "eval_order_array_access1" (formula "19") (term "1") (inst "#v0=x_arr"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_2"))
               (rule "assignment_read_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "replaceKnownSelect_taclet10_0" (formula "19") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "19") (term "0,1,0"))
               (rule "eval_order_array_access3" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v2=x") (inst "#v0=x_arr_3"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_3"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_5"))
               (rule "assignment" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_6"))
               (rule "assignment_read_attribute_this" (formula "19") (term "1"))
                (builtin "One Step Simplification" (formula "19"))
               (rule "replaceKnownSelect_taclet10_2" (formula "19") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10_3" (formula "19") (term "0,1,0"))
               (rule "assignment_to_primitive_array_component" (formula "19") (term "1"))
               (branch "Normal Execution (x_arr_3 != null)"
                   (builtin "One Step Simplification" (formula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "16")))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "postincrement" (formula "19") (term "1"))
                  (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "19") (term "1"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_7"))
                  (rule "remove_parentheses_right" (formula "19") (term "1"))
                  (rule "assignmentAdditionInt" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "19") (term "1"))
                  (rule "assignment" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "tryEmpty" (formula "19") (term "1"))
                  (rule "methodCallEmpty" (formula "19") (term "1"))
                  (rule "emptyModality" (formula "19") (term "1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "eqSymm" (formula "19") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                  (rule "mul_literals" (formula "19") (term "0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "19") (term "0,1,0,1"))
                  (rule "replaceKnownSelect_taclet10_0" (formula "19") (term "0,1,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "19") (term "0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet10_0" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "replace_known_left" (formula "19") (term "1,0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "dismissNonSelectedField" (formula "19") (term "1,0,1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet10_0" (formula "19") (term "1,0,1,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10_1" (formula "19") (term "1,0,1,0,1,0,0"))
                  (rule "precOfInt" (formula "19") (term "1"))
                  (rule "dismissNonSelectedField" (formula "19") (term "1,1,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet10_2" (formula "19") (term "1,1,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10_3" (formula "19") (term "1,1,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1"))
                  (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,1,1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,1,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,1,1"))
                  (rule "add_literals" (formula "19") (term "1,1,0,1,1"))
                  (rule "times_zero_1" (formula "19") (term "1,0,1,1"))
                  (rule "add_zero_right" (formula "19") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,1,1"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,1"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,1"))
                  (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,1"))
                  (rule "add_literals" (formula "19") (term "1,0,1,1"))
                  (rule "times_zero_1" (formula "19") (term "0,1,1"))
                  (rule "leq_literals" (formula "19") (term "1,1"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                  (rule "times_zero_2" (formula "19") (term "1,0,1"))
                  (rule "add_zero_right" (formula "19") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                  (rule "mul_literals" (formula "19") (term "0,1,1"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "15"))
                  (rule "leq_literals" (formula "19") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "andRight" (formula "19"))
                  (branch "Case 1"
                     (rule "allRight" (formula "19") (inst "sk=j_0"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "inEqSimp_leqRight" (formula "19"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "20"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                     (rule "mul_literals" (formula "3") (term "0,0"))
                     (rule "add_zero_left" (formula "3") (term "0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "j_0 = i_0 TRUE"
                        (rule "close" (formula "23") (ifseqformula "2"))
                     )
                     (branch "j_0 = i_0 FALSE"
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "22"))
                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "19"))
                        (rule "inEqSimp_contradEq3" (formula "19") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "qeq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "false_right" (formula "19"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "mul_literals" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "2"))
                        (rule "leq_literals" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "allLeft" (formula "18") (inst "t=j_0"))
                        (rule "replaceKnownSelect_taclet0000010_5" (formula "18") (term "0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet0000010_6" (formula "18") (term "0,1"))
                        (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "22"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1"))
                        (rule "leq_literals" (formula "18") (term "0,1"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "closeFalse" (formula "18"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "19") (inst "sk=f_0"))
                     (rule "allRight" (formula "19") (inst "sk=o_0"))
                     (rule "orRight" (formula "19"))
                     (rule "orRight" (formula "19"))
                     (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_3 = null)"
                   (builtin "One Step Simplification" (formula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr_3 != null, but x_5 Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                  (rule "add_literals" (formula "1") (term "0,0,1"))
                  (rule "blockThrow" (formula "20") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "1,1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "16"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_2 false"
                (builtin "One Step Simplification" (formula "20"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (x_arr_1 = null)"
             (builtin "One Step Simplification" (formula "19"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (x_arr = null)"
          (builtin "One Step Simplification" (formula "17"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "16"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "b_1"))
      (rule "blockEmpty" (formula "18") (term "1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "pullOutSelect" (formula "15") (term "1,1,0") (inst "selectSK=NumericTextBox_EMPTY_0"))
      (rule "simplifySelectOfAnon" (formula "15"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")) (ifInst ""  (formula "2")))
      (rule "eqSymm" (formula "15") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "15") (term "0,0"))
      (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "17"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")))
      (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "15"))
      (rule "hideAuxiliaryEq" (formula "15"))
      (rule "pullOutSelect" (formula "15") (term "1,0,1,0") (inst "selectSK=NumericTextBox_content_0"))
      (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
      (rule "simplifySelectOfAnon" (formula "15"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "18")) (ifInst ""  (formula "2")))
      (rule "eqSymm" (formula "15") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "15") (term "0,0"))
      (rule "replace_known_right" (formula "15") (term "1,0,0") (ifseqformula "18"))
       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
      (rule "applyEqReverse" (formula "16") (term "1,0,1,0") (ifseqformula "15"))
      (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "15"))
      (rule "hideAuxiliaryEq" (formula "15"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "compound_less_than_comparison_2" (formula "18") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x"))
      (rule "assignment" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_1"))
      (rule "eval_order_array_access6" (formula "18") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "18") (term "1"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "replaceKnownSelect_taclet20_2" (formula "18") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "18") (term "0,1,0"))
      (rule "assignment_read_length" (formula "18") (term "1"))
      (branch "Normal Execution (x_arr != null)"
          (builtin "One Step Simplification" (formula "19"))
          (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
         (rule "false_right" (formula "18"))
         (rule "less_than_comparison_simple" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
         (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "emptyModality" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "impRight" (formula "18"))
         (rule "notLeft" (formula "1"))
         (rule "inEqSimp_geqRight" (formula "16"))
         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
         (rule "add_literals" (formula "1") (term "0,0,0"))
         (rule "add_zero_left" (formula "1") (term "0,0"))
         (rule "assignment_write_attribute_this" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "1"))
         (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
         (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq1" (formula "16"))
         (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
         (rule "add_literals" (formula "16") (term "1,0"))
         (rule "times_zero_1" (formula "16") (term "0"))
         (rule "leq_literals" (formula "16"))
         (rule "true_left" (formula "16"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
         (rule "inEqSimp_homoInEq0" (formula "1"))
         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,0"))
         (rule "times_zero_1" (formula "1") (term "0"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "11") (term "1,0,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "14"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "13"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
         (rule "times_zero_1" (formula "6") (term "0,0"))
         (rule "add_zero_left" (formula "6") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "13"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "ifUnfold" (formula "17") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_2"))
         (rule "compound_inequality_comparison_1" (formula "17") (term "1") (inst "#v0=t"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "t"))
         (rule "assignment_read_attribute_this" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "dismissNonSelectedField" (formula "17") (term "0,1,0"))
         (rule "pullOutSelect" (formula "17") (term "0,1,0") (inst "selectSK=NumericTextBox_textBoxRenderer_0"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")) (ifInst ""  (formula "3")))
         (rule "eqSymm" (formula "1") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "applyEqReverse" (formula "18") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "5"))
         (rule "inequality_comparison_simple" (formula "17") (term "1"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "1"))
         (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "arrayLengthNotNegative" (formula "13") (term "0"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
         (rule "arrayLengthIsAnInt" (formula "13") (term "0"))
          (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "ifSplit" (formula "17"))
         (branch "if x_2 true"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
             (builtin "One Step Simplification" (formula "18"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "tryEmpty" (formula "17") (term "1"))
            (rule "emptyModality" (formula "17") (term "1"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "eqSymm" (formula "17") (term "1,0,0,1"))
            (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,1,1,0"))
            (rule "replaceKnownSelect_taclet020_4" (formula "17") (term "0,0,0,0,1,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet020_5" (formula "17") (term "0,0,0,0,1,1,0"))
            (rule "replace_known_left" (formula "17") (term "0,0,0,1,1,0") (ifseqformula "5"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet20_0" (formula "17") (term "1,1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "17") (term "1,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0,0,1,0"))
            (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "0,1,1,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "0,1,1,0,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,0,1,0"))
            (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "1,0,1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "1,0,1,0,0,1,0"))
            (rule "applyEq" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
            (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "14"))
             (builtin "One Step Simplification" (formula "17"))
            (rule "applyEq" (formula "17") (term "1,0,1,0,0,0,0,1") (ifseqformula "5"))
            (rule "pullOutSelect" (formula "17") (term "0,0,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "18") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "Class_invariant_axiom_for_NumericTextBox" (formula "17") (term "0") (inst "i=i_1") (inst "i_0=i_0") (inst "sk=sk_1") (ifseqformula "3"))
            (branch "Use Axiom"
                (builtin "One Step Simplification" (formula "17"))
               (rule "replaceKnownSelect_taclet1020_6" (formula "17") (term "1,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet1020_6" (formula "17") (term "0,1,1,0,0,0"))
               (rule "replaceKnownSelect_taclet1020_6" (formula "17") (term "0,0,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1020_7" (formula "17") (term "1,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1020_7" (formula "17") (term "0,1,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1020_7" (formula "17") (term "0,0,1,0,0,0"))
               (rule "replaceKnownSelect_taclet1020_6" (formula "17") (term "1,1,0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1020_7" (formula "17") (term "1,1,0,0,1,0,0"))
               (rule "translateJavaAddInt" (formula "17") (term "1,1,1,0,0,0"))
               (rule "qeq_literals" (formula "17") (term "0,1,0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "0,0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "0,0,0,0,0,0"))
               (rule "replace_known_right" (formula "17") (term "0,0,0,0,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0,1,0"))
               (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "0,1,0,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "0,1,0,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0,0"))
               (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "0,1,1,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "0,1,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1,0"))
               (rule "replaceKnownSelect_taclet20_0" (formula "17") (term "1,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "17") (term "1,1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "1,0,1,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "1,0,1,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "1,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "1,0,1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,1,0,1,0,0"))
               (rule "replaceKnownSelect_taclet20_2" (formula "17") (term "1,0,0,1,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "17") (term "1,0,0,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
               (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "13"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,1,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_subsumption1" (formula "17") (term "0,0,0") (ifseqformula "12"))
               (rule "leq_literals" (formula "17") (term "0,0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "nnf_imp2or" (formula "17") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "17") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "17") (term "0,1,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0,1,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "17"))
               (rule "andRight" (formula "17"))
               (branch "Case 1"
                  (rule "allRight" (formula "17") (inst "sk=i_1_0"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "inEqSimp_geqRight" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_leqRight" (formula "18"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                  (rule "leq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                  (rule "replaceKnownSelect_taclet001020_8" (formula "17") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001020_9" (formula "17") (term "0,1"))
                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1"))
                  (rule "leq_literals" (formula "17") (term "0,1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "17"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "17") (inst "sk=f_0"))
                  (rule "allRight" (formula "17") (inst "sk=o_0"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "orRight" (formula "17"))
                  (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "22"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "19"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnon" (formula "1"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Show Axiom Satisfiability"
                (builtin "One Step Simplification" (formula "17"))
               (rule "closeTrue" (formula "17"))
            )
         )
      )
      (branch "Null Reference (x_arr = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)
}
