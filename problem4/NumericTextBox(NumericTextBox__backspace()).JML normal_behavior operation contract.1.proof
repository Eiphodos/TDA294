\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Oct 27 13:55:34 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:noRestriction
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=80000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Sun Oct 27 13:55:34 CET 2019
contract=NumericTextBox[NumericTextBox\\:\\:backspace()].JML normal_behavior operation contract.1
name=NumericTextBox[NumericTextBox\\:\\:backspace()].JML normal_behavior operation contract.1
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "David" ) (keyVersion "c934a1f554"))

(autoModeTime "351")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "assignment" (formula "8") (term "1"))
 (builtin "One Step Simplification" (formula "8"))
(rule "Class_invariant_axiom_for_NumericTextBox" (formula "5") (inst "i=i") (inst "i_0=i_0") (inst "n=n") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
    (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "7")))
   (rule "translateJavaAddInt" (formula "5") (term "1,1,1,0"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "5"))
   (rule "polySimp_addComm0" (formula "6") (term "1"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_gtToGeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
   (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
   (rule "times_zero_1" (formula "5") (term "0,0"))
   (rule "add_zero_left" (formula "5") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "5"))
   (rule "mul_literals" (formula "5") (term "1"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_backspace,savedHeapBefore_backspace"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "ifElseUnfold" (formula "12") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_1" (formula "12") (term "1") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_1"))
   (rule "assignment_read_attribute_this" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "equality_comparison_simple" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "arrayLengthIsAnInt" (formula "7") (term "1,1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "7") (term "1,1"))
   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
   (rule "leq_literals" (formula "5") (term "0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "ifElseSplit" (formula "12"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "times_zero_2" (formula "8") (term "1,0"))
      (rule "add_zero_right" (formula "8") (term "0"))
      (rule "applyEq" (formula "6") (term "0") (ifseqformula "1"))
      (rule "qeq_literals" (formula "6"))
      (rule "true_left" (formula "6"))
      (rule "applyEq" (formula "8") (term "1,1,0,0") (ifseqformula "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7"))
      (rule "mul_literals" (formula "7") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
      (rule "leq_literals" (formula "7") (term "0"))
       (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "commute_or" (formula "7") (term "0,0"))
      (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
      (rule "compound_inequality_comparison_1" (formula "11") (term "1") (inst "#v0=t"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "t"))
      (rule "assignment_read_attribute_this" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "inequality_comparison_simple" (formula "11") (term "1"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "10"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "ifSplit" (formula "11"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "1"))
         (rule "eval_order_access1" (formula "11") (term "1") (inst "#v0=t"))
         (rule "variableDeclarationAssign" (formula "11") (term "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "t_1"))
         (rule "assignment_read_attribute_this" (formula "11") (term "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "assignment_write_attribute" (formula "11") (term "1"))
         (branch "Normal Execution (t_1 != null)"
             (builtin "One Step Simplification" (formula "12"))
             (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
            (rule "false_right" (formula "11"))
            (rule "blockEmpty" (formula "11") (term "1"))
            (rule "throwUnfold" (formula "11") (term "1") (inst "#v0=r"))
            (rule "variableDeclarationAssign" (formula "11") (term "1"))
            (rule "variableDeclaration" (formula "11") (term "1") (newnames "r"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "3"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "10"))
             (builtin "One Step Simplification" (formula "1"))
             (opengoal " ")
         )
         (branch "Null Reference (t_1 = null)"
             (builtin "One Step Simplification" (formula "12"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "13"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "eval_order_array_access1" (formula "13") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr"))
      (rule "assignment_read_attribute_this" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "eval_order_array_access2" (formula "13") (term "1") (inst "#v0=x") (inst "#ar1=x_arr_1"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_1"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_2"))
      (rule "assignment_read_attribute_this" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "eval_order_array_access3" (formula "13") (term "1") (inst "#v1=x_4") (inst "#v2=x_3") (inst "#v0=x_arr_2"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr_2"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
      (rule "assignment_read_attribute_this" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "assignment_to_primitive_array_component" (formula "13") (term "1"))
      (branch "Normal Execution (x_arr_2 != null)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")) (ifInst ""  (formula "6")))
         (rule "inEqSimp_ltToLeq" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "10"))
         (rule "add_zero_right" (formula "6") (term "1"))
         (rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "6"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0"))
         (rule "leq_literals" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "false_right" (formula "10"))
         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
         (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
         (rule "add_literals" (formula "8") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0"))
         (rule "qeq_literals" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
         (rule "mul_literals" (formula "6") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
         (rule "leq_literals" (formula "8") (term "0"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "postdecrement_attribute" (formula "12") (term "1") (inst "#v=n"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "n"))
         (rule "assignment" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "eval_order_access4" (formula "12") (term "1") (inst "#v1=x") (inst "#v0=n_1"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "n_1"))
         (rule "assignment" (formula "12") (term "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_5"))
         (rule "compound_int_cast_expression" (formula "12") (term "1") (inst "#v=x_6"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_6"))
         (rule "remove_parentheses_right" (formula "12") (term "1"))
         (rule "compound_subtraction_1" (formula "12") (term "1") (inst "#v=x_7"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_7"))
         (rule "assignment_read_attribute" (formula "12") (term "1"))
         (branch "Normal Execution (n != null)"
             (builtin "One Step Simplification" (formula "13"))
             (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")))
            (rule "false_right" (formula "12"))
            (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
            (rule "assignmentSubtractionInt" (formula "12") (term "1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "translateJavaSubInt" (formula "12") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,0"))
            (rule "mul_literals" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "12") (term "1"))
            (rule "assignment" (formula "12") (term "1"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "assignment_write_attribute" (formula "12") (term "1"))
            (branch "Normal Execution (n_1 != null)"
                (builtin "One Step Simplification" (formula "13"))
                (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")))
               (rule "false_right" (formula "12"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "10"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_8"))
               (rule "compound_inequality_comparison_1" (formula "14") (term "1") (inst "#v0=t"))
               (rule "variableDeclarationAssign" (formula "14") (term "1"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "t"))
               (rule "assignment_read_attribute_this" (formula "14") (term "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "inequality_comparison_simple" (formula "14") (term "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "replace_known_right" (formula "14") (term "0,0,1,0") (ifseqformula "13"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "ifSplit" (formula "14"))
               (branch "if x_8 true"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "1"))
                  (rule "eval_order_access1" (formula "14") (term "1") (inst "#v0=t"))
                  (rule "variableDeclarationAssign" (formula "14") (term "1"))
                  (rule "variableDeclaration" (formula "14") (term "1") (newnames "t_1"))
                  (rule "assignment_read_attribute_this" (formula "14") (term "1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
                  (rule "assignment_write_attribute" (formula "14") (term "1"))
                  (branch "Normal Execution (t_1 != null)"
                      (builtin "One Step Simplification" (formula "15"))
                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
                     (rule "false_right" (formula "14"))
                     (rule "methodCallEmpty" (formula "14") (term "1"))
                     (rule "tryEmpty" (formula "14") (term "1"))
                     (rule "emptyModality" (formula "14") (term "1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "eqSymm" (formula "14") (term "1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0"))
                     (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=TextBoxRenderer_contentChanged_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "Class_invariant_axiom_for_NumericTextBox" (formula "14") (term "0") (inst "i=i") (inst "i_0=i_0") (inst "n=n_2") (inst "sk=sk_1") (ifseqformula "6"))
                     (branch "Use Axiom"
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "translateJavaAddInt" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "replace_known_right" (formula "14") (term "0,0,0,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0"))
                        (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "13"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,0"))
                        (rule "pullOutSelect" (formula "14") (term "0,1,0,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
                        (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                        (rule "add_zero_left" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                        (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_subsumption0" (formula "14") (term "0,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "14") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "nnf_imp2or" (formula "14") (term "0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                        (rule "andRight" (formula "14"))
                        (branch "Case 1"
                           (rule "allRight" (formula "14") (inst "sk=i_0"))
                           (rule "orRight" (formula "14"))
                           (rule "orRight" (formula "14"))
                           (rule "inEqSimp_geqRight" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "15"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "2"))
                           (rule "mul_literals" (formula "12") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                           (rule "mul_literals" (formula "12") (term "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "self.cursorPosition = i_0 TRUE"
                              (rule "close" (formula "19") (ifseqformula "2"))
                           )
                           (branch "self.cursorPosition = i_0 FALSE"
                              (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "18"))
                              (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "14"))
                              (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0"))
                              (rule "qeq_literals" (formula "14") (term "0"))
                               (builtin "One Step Simplification" (formula "14"))
                              (rule "false_right" (formula "14"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                              (rule "mul_literals" (formula "12") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                              (rule "leq_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "allLeft" (formula "13") (inst "t=i_0"))
                              (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "18"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                              (rule "inEqSimp_commuteGeq" (formula "13") (term "0"))
                              (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1"))
                              (rule "leq_literals" (formula "13") (term "0,1"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "2"))
                              (rule "andLeft" (formula "13"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0"))
                              (rule "add_literals" (formula "13") (term "0"))
                              (rule "leq_literals" (formula "13"))
                              (rule "closeFalse" (formula "13"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "14") (inst "sk=f_0"))
                           (rule "allRight" (formula "14") (inst "sk=o_0"))
                           (rule "orRight" (formula "14"))
                           (rule "orRight" (formula "14"))
                           (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "17"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "commute_and" (formula "16"))
                           (rule "commute_and" (formula "2") (term "0,0"))
                           (rule "commute_and" (formula "1") (term "0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_0 = arr(self.cursorPosition) & o_0 = self.content TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "applyEq" (formula "16") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_left" (formula "16") (term "0,1") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "16"))
                              (rule "false_right" (formula "16"))
                              (rule "applyEq" (formula "16") (term "2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
                              (rule "narrowSelectArrayType" (formula "16") (term "0") (ifseqformula "6") (ifseqformula "13"))
                               (opengoal " ")
                           )
                           (branch "f_0 = arr(self.cursorPosition) & o_0 = self.content FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = NumericTextBox::$cursorPosition & o_0 = self TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "19") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "18") (term "1,0,0,1") (ifseqformula "2"))
                                 (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "7"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "false_right" (formula "17"))
                                 (rule "applyEqRigid" (formula "13") (term "0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "13"))
                                 (rule "false_right" (formula "13"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "2"))
                                 (rule "polySimp_homoEq" (formula "16"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0"))
                                 (rule "add_literals" (formula "16") (term "0"))
                                 (rule "equal_literals" (formula "16"))
                                 (rule "false_right" (formula "16"))
                                  (opengoal " ")
                              )
                              (branch "f_0 = NumericTextBox::$cursorPosition & o_0 = self FALSE"
                                 (rule "close" (formula "19") (ifseqformula "1"))
                              )
                           )
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                         (builtin "One Step Simplification" (formula "14"))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
                  (branch "Null Reference (t_1 = null)"
                      (builtin "One Step Simplification" (formula "15"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "if x_8 false"
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (n_1 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (n = null)"
             (builtin "One Step Simplification" (formula "13"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (x_arr_2 = null)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_2 != null, but x_3 Out of Bounds!)"
          (builtin "One Step Simplification" (formula "14"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "10"))
         (rule "add_zero_right" (formula "6") (term "1"))
         (rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "6"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0"))
         (rule "leq_literals" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "false_right" (formula "10"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
         (rule "mul_literals" (formula "6") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "6") (term "0"))
         (rule "add_literals" (formula "6") (term "0,0"))
         (rule "add_zero_left" (formula "6") (term "0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,1,1") (ifseqformula "2"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "11"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "throwUnfold" (formula "15") (term "1") (inst "#v0=a"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "a"))
          (opengoal " ")
      )
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
   (rule "closeTrue" (formula "6"))
)
)
}
