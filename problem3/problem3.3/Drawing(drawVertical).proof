\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Oct 27 12:11:05 CET 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:noRestriction
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=20000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Sun Oct 27 12:11:05 CET 2019
contract=Drawing[Drawing\\:\\:drawVertical(int)].JML normal_behavior operation contract.0
name=Drawing[Drawing\\:\\:drawVertical(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "David" ) (keyVersion "c934a1f554"))

(autoModeTime "10528")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "depth,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
(rule "polySimp_addComm1" (formula "6") (term "0"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "inEqSimp_sepNegMonomial0" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "Class_invariant_axiom_for_Drawing" (formula "7") (inst "j=j") (inst "i=i") (inst "i_0=i_0") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
    (builtin "One Step Simplification" (formula "7"))
   (rule "translateJavaSubInt" (formula "7") (term "0,2,0,0,0,1,1,0,0,1"))
   (rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,0,0,1"))
   (rule "translateJavaSubInt" (formula "7") (term "0,2,1,0,0,1,1,1,0,0,1"))
   (rule "translateJavaSubInt" (formula "7") (term "1,1,0,0,0,1"))
   (rule "translateJavaAddInt" (formula "7") (term "0,2,0,1,0,1,1,0,0,1"))
   (rule "translateJavaAddInt" (formula "7") (term "0,2,1,0,1,1,1,1,0,0,1"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,1,1,0,0,0,0"))
   (rule "polySimp_elimSub" (formula "9") (term "0,2,0,0,0,1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,2,0,0,0,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "9") (term "0,2,1,0,0,1,1,1,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,2,1,0,0,1,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,2,0,1,0,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,2,1,0,1,1,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,2,0,0,0,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,2,1,0,0,1,1,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "9") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
   (rule "nonNull" (formula "7") (inst "i=i"))
   (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "greater_literals" (formula "7") (term "0,1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
   (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "9") (term "1,0,0"))
   (rule "nnf_imp2or" (formula "8") (term "0"))
   (rule "nnf_imp2or" (formula "7") (term "0"))
   (rule "nnf_imp2or" (formula "9") (term "0,0"))
   (rule "nnf_notAnd" (formula "8") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "7") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
   (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
   (rule "mul_literals" (formula "7") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
   (rule "add_literals" (formula "9") (term "0,0,1,0,0,0,0,0"))
   (rule "add_zero_left" (formula "9") (term "0,1,0,0,0,0,0"))
   (rule "commute_or_2" (formula "7") (term "0"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_drawVertical,savedHeapBefore_drawVertical,_depthBefore_drawVertical"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "i"))
   (rule "assignment" (formula "12") (term "1"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "commute_or" (formula "7") (term "0,0"))
   (rule "commute_and" (formula "9") (term "1,1,1,0,0"))
   (rule "commute_and" (formula "9") (term "0,1,1,0,0"))
   (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "commute_or" (formula "9") (term "0,1,1,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "1,1,1,0,0"))
   (rule "commute_or" (formula "9") (term "1,1,1,1,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "0,1,1,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "1,0,0"))
   (rule "commute_or" (formula "9") (term "1,1,0,0"))
   (rule "commute_or" (formula "9") (term "1,1,0,1,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "1,1,0,0"))
   (rule "commute_or_2" (formula "9") (term "1,1,1,0,0"))
   (rule "shift_paren_or" (formula "9") (term "0,1,1,0,0"))
   (rule "commute_or" (formula "9") (term "0,1,1,1,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "0,1,0,0"))
   (rule "commute_or_2" (formula "9") (term "1,0,1,0,0"))
   (rule "shift_paren_or" (formula "9") (term "0,0,1,0,0"))
   (rule "cnf_rightDist" (formula "9") (term "0,0"))
   (rule "distr_forallAnd" (formula "9") (term "0"))
   (rule "distr_forallAnd" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "commute_or" (formula "10") (term "0,0"))
   (rule "cnf_rightDist" (formula "9") (term "0,0"))
   (rule "distr_forallAnd" (formula "9") (term "0"))
   (rule "distr_forallAnd" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "commute_or_2" (formula "9") (term "0,0"))
   (rule "shift_paren_or" (formula "10") (term "0,0"))
   (rule "commute_or_2" (formula "9") (term "0,0,0"))
   (rule "shift_paren_or" (formula "10") (term "0,0,0"))
   (rule "commute_or_2" (formula "9") (term "0,0,0,0"))
   (rule "cnf_rightDist" (formula "11") (term "0,0"))
   (rule "distr_forallAnd" (formula "11") (term "0"))
   (rule "distr_forallAnd" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "commute_or_2" (formula "11") (term "0,0"))
   (rule "shift_paren_or" (formula "12") (term "0,0"))
   (rule "commute_or_2" (formula "11") (term "0,0,0"))
   (rule "shift_paren_or" (formula "12") (term "0,0,0"))
   (rule "commute_or_2" (formula "11") (term "0,0,0,0"))
   (rule "shift_paren_or" (formula "10") (term "0,0,0,0"))
   (rule "commute_or" (formula "9") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "12") (term "0,0,0,0"))
   (rule "commute_or" (formula "11") (term "0,0,0,0,0"))
   (rule "commute_or" (formula "10") (term "0,0,0,0,0,0,0"))
   (rule "arrayLengthNotNegative" (formula "6") (term "0"))
   (rule "arrayLengthIsAnInt" (formula "7") (term "0"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "10") (term "1,1,1,0,0"))
   (rule "arrayLengthIsAnInt" (formula "11") (term "1,1,1,0,0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "11"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,0") (ifseqformula "1"))
   (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "16"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "onlyCreatedObjectsAreReferenced" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "1"))
    (builtin "Loop Invariant" (formula "19") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
   (branch "Invariant Initially Valid"
       (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
      (rule "leq_literals" (formula "19") (term "0,0"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1"))
      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0,1"))
      (rule "add_zero_right" (formula "19") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1"))
      (rule "mul_literals" (formula "19") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "19") (term "0,1"))
      (rule "nnf_notAnd" (formula "19") (term "0,0,1"))
      (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1"))
      (rule "mul_literals" (formula "19") (term "1,0,0,1,0,0,1"))
      (rule "add_literals" (formula "19") (term "0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "19") (term "0,1,0,0,1"))
       (builtin "One Step Simplification" (formula "19"))
      (rule "inEqSimp_geqRight" (formula "19"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "allLeft" (formula "11") (inst "t=depth"))
      (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
      (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "9"))
      (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
      (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
      (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
      (rule "leq_literals" (formula "11") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "6"))
      (rule "qeq_literals" (formula "11") (term "0,0"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Body Preserves Invariant"
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0,1"))
      (rule "translateJavaSubInt" (formula "21") (term "0,1,1,1,0,1,1"))
      (rule "andLeft" (formula "18"))
      (rule "impRight" (formula "22"))
      (rule "andLeft" (formula "19"))
      (rule "eqSymm" (formula "24") (term "1,0,0,1,0,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "24") (term "0,1,1,1,0"))
      (rule "polySimp_elimSub" (formula "24") (term "0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "24") (term "0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "24") (term "0,1,1,1,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "20"))
      (rule "pullOutSelect" (formula "24") (term "0,1,0,1,1,1,0") (inst "selectSK=arr_0"))
      (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
      (rule "variableDeclarationAssign" (formula "2") (term "1"))
      (rule "variableDeclarationAssign" (formula "25") (term "1"))
      (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_1"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "exc_1"))
      (rule "assignment" (formula "25") (term "1"))
       (builtin "One Step Simplification" (formula "25"))
      (rule "variableDeclaration" (formula "25") (term "1") (newnames "thrownExc"))
      (rule "blockThrow" (formula "25") (term "1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
      (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=Drawing_canvas_0"))
      (rule "applyEq" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
      (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnon" (formula "1"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
      (rule "eqSymm" (formula "1") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "25"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "2") (term "1,0,0,1,1,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "23")))
      (rule "applyEqReverse" (formula "25") (term "0,1,0,1,1,1,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "1,0,1,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "21") (term "0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "20") (term "0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "24") (term "0,1,0,0,1,1,0,1"))
      (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
      (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,0,1,1,0,1"))
      (rule "commute_or_2" (formula "20") (term "0"))
      (rule "commute_or" (formula "20") (term "0,0"))
      (rule "compound_less_than_comparison_2" (formula "21") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "x"))
      (rule "assignment" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_1"))
      (rule "eval_order_array_access6" (formula "21") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr"))
      (rule "eval_order_array_access4" (formula "21") (term "1") (inst "#v0=x_arr_arr"))
      (rule "variableDeclarationAssign" (formula "21") (term "1"))
      (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr_arr"))
      (rule "assignment_read_attribute_this" (formula "21") (term "1"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "replaceKnownSelect_taclet10_1" (formula "21") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet10_2" (formula "21") (term "0,1,0"))
      (rule "assignment_array2" (formula "21") (term "1"))
      (branch "Normal Execution (x_arr_arr != null)"
          (builtin "One Step Simplification" (formula "22"))
          (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")))
         (rule "orRight" (formula "21"))
         (rule "inEqSimp_leqRight" (formula "21"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltRight" (formula "22"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnon" (formula "1"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "9")))
         (rule "eqSymm" (formula "1") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "24"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "assignment_read_length" (formula "22") (term "1"))
         (branch "Normal Execution (x_arr != null)"
             (builtin "One Step Simplification" (formula "23"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "less_than_comparison_simple" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "emptyModality" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "notRight" (formula "22"))
            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
            (rule "add_literals" (formula "20") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0"))
            (rule "qeq_literals" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "ifUnfold" (formula "24") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_2"))
            (rule "compound_less_than_comparison_2" (formula "24") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_4"))
            (rule "eval_order_access2" (formula "24") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_1"))
            (rule "eval_order_array_access4" (formula "24") (term "1") (inst "#v0=x_arr_arr"))
            (rule "variableDeclarationAssign" (formula "24") (term "1"))
            (rule "variableDeclaration" (formula "24") (term "1") (newnames "x_arr_arr_1"))
            (rule "assignment_read_attribute_this" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "replaceKnownSelect_taclet10_1" (formula "24") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet10_2" (formula "24") (term "0,1,0"))
            (rule "assignment_array2" (formula "24") (term "1"))
            (branch "Normal Execution (x_arr_arr_1 != null)"
                (builtin "One Step Simplification" (formula "25"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "22")))
               (rule "replaceKnownSelect_taclet010_4" (formula "25") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "25") (term "0,1,0"))
               (rule "orRight" (formula "24"))
               (rule "inEqSimp_leqRight" (formula "24"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "inEqSimp_ltRight" (formula "25"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "assignment_read_length" (formula "25") (term "1"))
               (branch "Normal Execution (x_arr_1 != null)"
                   (builtin "One Step Simplification" (formula "26"))
                   (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "22")))
                  (rule "false_right" (formula "25"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "less_than_comparison_simple" (formula "24") (term "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
                  (rule "replace_known_left" (formula "24") (term "0,0,1,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "allLeft" (formula "11") (inst "t=depth"))
                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1,0") (ifseqformula "9"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1,0"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "11") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "applyEq" (formula "25") (term "1,0,1,1,1,0,0,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                  (rule "ifSplit" (formula "25"))
                  (branch "if x_2 true"
                      (builtin "One Step Simplification" (formula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eval_order_array_access1" (formula "25") (term "1") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_arr_2"))
                     (rule "eval_order_array_access4" (formula "25") (term "1") (inst "#v0=x_arr_arr"))
                     (rule "variableDeclarationAssign" (formula "25") (term "1"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_arr_arr_2"))
                     (rule "assignment_read_attribute_this" (formula "25") (term "1"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "replaceKnownSelect_taclet10_1" (formula "25") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet10_2" (formula "25") (term "0,1,0"))
                     (rule "assignment_array2" (formula "25") (term "1"))
                     (branch "Normal Execution (x_arr_arr_2 != null)"
                         (builtin "One Step Simplification" (formula "26"))
                         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "23")))
                        (rule "replaceKnownSelect_taclet010_4" (formula "26") (term "0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "26") (term "0,1,0"))
                        (rule "orRight" (formula "25"))
                        (rule "inEqSimp_leqRight" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_ltRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "assignment_to_primitive_array_component" (formula "26") (term "1"))
                        (branch "Normal Execution (x_arr_2 != null)"
                            (builtin "One Step Simplification" (formula "27"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "22")))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "postincrement" (formula "25") (term "1"))
                           (rule "compound_int_cast_expression" (formula "25") (term "1") (inst "#v=x"))
                           (rule "variableDeclarationAssign" (formula "25") (term "1"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_5"))
                           (rule "remove_parentheses_right" (formula "25") (term "1"))
                           (rule "assignmentAdditionInt" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "translateJavaAddInt" (formula "25") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                           (rule "widening_identity_cast_5" (formula "25") (term "1"))
                           (rule "assignment" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "tryEmpty" (formula "25") (term "1"))
                           (rule "methodCallEmpty" (formula "25") (term "1"))
                           (rule "emptyModality" (formula "25") (term "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "eqSymm" (formula "25") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "0,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,1,0,1,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet10_1" (formula "25") (term "1,1,0,1,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_2" (formula "25") (term "1,1,0,1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet10_1" (formula "25") (term "1,0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_2" (formula "25") (term "1,0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "25") (term "1,0,1,0,1"))
                           (rule "replaceKnownSelect_taclet10_1" (formula "25") (term "1,0,1,0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10_2" (formula "25") (term "1,0,1,0,1"))
                           (rule "precOfInt" (formula "25") (term "1"))
                           (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,1"))
                           (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,1,1"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,1,1"))
                           (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0,1,1"))
                           (rule "add_literals" (formula "25") (term "0,0,0,0,0,1,1"))
                           (rule "add_zero_left" (formula "25") (term "0,0,0,0,1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "25") (term "0,0,0,1,1"))
                           (rule "add_literals" (formula "25") (term "1,0,0,0,1,1"))
                           (rule "times_zero_1" (formula "25") (term "0,0,0,1,1"))
                           (rule "add_zero_left" (formula "25") (term "0,0,1,1"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "25") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,0"))
                           (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1"))
                           (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1"))
                           (rule "inEqSimp_subsumption1" (formula "25") (term "0,0,0,0") (ifseqformula "20"))
                           (rule "leq_literals" (formula "25") (term "0,0,0,0,0"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "pullOutSelect" (formula "25") (term "0,0,0,1") (inst "selectSK=arr_2"))
                           (rule "applyEq" (formula "26") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "26") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "26") (term "0,0,1,1") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet010_4" (formula "1") (term "2,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet010_5" (formula "1") (term "2,0"))
                           (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "applyEqReverse" (formula "26") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "26") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "26") (term "0,0,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "26") (term "0,0,0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "applyEq" (formula "25") (term "0,0,0,0") (ifseqformula "11"))
                           (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "11"))
                           (rule "inEqSimp_homoInEq0" (formula "25") (term "1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,1"))
                           (rule "add_literals" (formula "25") (term "1,0,1,1"))
                           (rule "times_zero_1" (formula "25") (term "0,1,1"))
                           (rule "qeq_literals" (formula "25") (term "1,1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "11"))
                           (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "25"))
                           (rule "andRight" (formula "25"))
                           (branch "Case 1"
                              (rule "allRight" (formula "25") (inst "sk=x_0"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "inEqSimp_leqRight" (formula "25"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "26"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "28"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "24"))
                              (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "24"))
                              (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0"))
                              (rule "qeq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "false_right" (formula "24"))
                              (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "2"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "hideAuxiliaryEqConcrete2" (formula "28"))
                              (rule "cut_direct" (formula "17") (term "0"))
                              (branch "CUT: self.canvas[0] = null TRUE"
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "17"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                 (rule "arrayLengthIsAnInt" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "24") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet0000000010_9" (formula "24") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000010_10" (formula "24") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "26"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                 (rule "leq_literals" (formula "24") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "closeFalse" (formula "24"))
                              )
                              (branch "CUT: self.canvas[0] = null FALSE"
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                 (rule "arrayLengthIsAnInt" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "1,0,0,0,0") (ifseqformula "5"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "24") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "24") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "24") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnon" (formula "24"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "24"))
                                 (rule "hideAuxiliaryEq" (formula "24"))
                                 (rule "allLeft" (formula "25") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet0000000010_9" (formula "25") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0000000010_10" (formula "25") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "25") (term "0,0,1"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeFalse" (formula "25"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "25") (inst "sk=f_0"))
                              (rule "allRight" (formula "25") (inst "sk=o_0"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=f_0_0"))
                              (rule "simplifySelectOfStore" (formula "1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "28"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Null Reference (x_arr_2 = null)"
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr_2 != null, but i Out of Bounds!)"
                            (builtin "One Step Simplification" (formula "27"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "1") (term "0,0,1"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "leq_literals" (formula "1") (term "0,0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Null Reference (x_arr_arr_2 = null)"
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (x_arr_arr_2 != null, but _depth Out of Bounds!)"
                         (builtin "One Step Simplification" (formula "26"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                        (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0"))
                        (rule "leq_literals" (formula "1") (term "0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "7") (term "0"))
                         (builtin "One Step Simplification" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                  )
                  (branch "if x_2 false"
                      (builtin "One Step Simplification" (formula "26"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_1 = null)"
                   (builtin "One Step Simplification" (formula "26"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_arr_1 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr_arr_1 != null, but _depth Out of Bounds!)"
                (builtin "One Step Simplification" (formula "25"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "7"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Null Reference (x_arr = null)"
             (builtin "One Step Simplification" (formula "23"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEq" (formula "26") (term "0,1,0,1,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "23") (term "0,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "26") (term "0,1,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "allLeft" (formula "10") (inst "t=depth"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "6"))
            (rule "qeq_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "10"))
            (rule "andLeft" (formula "9"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "1,1,0"))
            (rule "times_zero_1" (formula "9") (term "1,0"))
            (rule "add_literals" (formula "9") (term "0"))
            (rule "leq_literals" (formula "9"))
            (rule "closeFalse" (formula "9"))
         )
      )
      (branch "Null Reference (x_arr_arr = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_arr != null, but _depth Out of Bounds!)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_literals" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Use Case"
       (builtin "One Step Simplification" (formula "21"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19"))
      (rule "inEqSimp_commuteLeq" (formula "18"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "b_1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
      (rule "pullOutSelect" (formula "20") (term "1,1,0,1,0") (inst "selectSK=Drawing_canvas_0"))
      (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "20"))
      (rule "simplifySelectOfAnon" (formula "20"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "23")) (ifInst ""  (formula "2")))
      (rule "eqSymm" (formula "20") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "20") (term "0,0"))
      (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "23"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "applyEqReverse" (formula "21") (term "1,1,0,1,0") (ifseqformula "20"))
      (rule "applyEqReverse" (formula "19") (term "1,0,0") (ifseqformula "20"))
      (rule "hideAuxiliaryEq" (formula "20"))
      (rule "pullOutSelect" (formula "20") (term "1,0,1,0") (inst "selectSK=arr_0"))
      (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "20"))
      (rule "simplifySelectOfAnon" (formula "20"))
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "22")) (ifInst ""  (formula "7")))
      (rule "eqSymm" (formula "20") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "20") (term "0,0"))
      (rule "replace_known_right" (formula "20") (term "1,0,0") (ifseqformula "22"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "applyEqReverse" (formula "21") (term "1,0,1,0") (ifseqformula "20"))
      (rule "applyEqReverse" (formula "19") (term "0,0") (ifseqformula "20"))
      (rule "hideAuxiliaryEq" (formula "20"))
      (rule "nnf_imp2or" (formula "20") (term "0"))
      (rule "nnf_notAnd" (formula "20") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
      (rule "mul_literals" (formula "20") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "20") (term "0"))
      (rule "commute_or" (formula "20") (term "0,0"))
      (rule "compound_less_than_comparison_2" (formula "23") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
      (rule "assignment" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_1"))
      (rule "eval_order_access2" (formula "23") (term "1") (inst "#v0=x_arr"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr"))
      (rule "eval_order_array_access4" (formula "23") (term "1") (inst "#v0=x_arr_arr"))
      (rule "variableDeclarationAssign" (formula "23") (term "1"))
      (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_arr_arr"))
      (rule "assignment_read_attribute_this" (formula "23") (term "1"))
       (builtin "One Step Simplification" (formula "23"))
      (rule "replaceKnownSelect_taclet20_0" (formula "23") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "23") (term "0,1,0"))
      (rule "assignment_array2" (formula "23") (term "1"))
      (branch "Normal Execution (x_arr_arr != null)"
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
         (rule "replaceKnownSelect_taclet20_2" (formula "24") (term "0,1,0"))
         (rule "replaceKnownAuxiliaryConstant_taclet20_3" (formula "24") (term "0,1,0"))
         (rule "orRight" (formula "23"))
         (rule "inEqSimp_leqRight" (formula "23"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltRight" (formula "24"))
         (rule "times_zero_1" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "assignment_read_length" (formula "24") (term "1"))
         (branch "Normal Execution (x_arr != null)"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "less_than_comparison_simple" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (rule "emptyModality" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "impRight" (formula "24"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "21"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
            (rule "polySimp_elimOne" (formula "1") (term "1"))
            (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
            (rule "inEqSimp_homoInEq1" (formula "21"))
            (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "1,0"))
            (rule "times_zero_1" (formula "21") (term "0"))
            (rule "leq_literals" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
            (rule "inEqSimp_homoInEq0" (formula "1"))
            (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,0"))
            (rule "times_zero_1" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "methodCallEmpty" (formula "24") (term "1"))
            (rule "tryEmpty" (formula "24") (term "1"))
            (rule "emptyModality" (formula "24") (term "1"))
             (builtin "One Step Simplification" (formula "24"))
            (rule "Class_invariant_axiom_for_Drawing" (formula "24") (inst "j=j") (inst "i=i_1") (inst "i_0=i_0") (inst "sk=sk_1") (ifseqformula "3"))
            (branch "Use Axiom"
                (builtin "One Step Simplification" (formula "24"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,0,0"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "0,1,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "0,1,1,0,1,0"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,0,0,1,0,1,0"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "0,1,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,0,0,1,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "0,1,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,1,0,0,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,1,0,0,1,0,0,1"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "0,0,1,1,0,0,0,0,1"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,0,0,1,1,0,0,0,1"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,1,0,1,0,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,1,0,1,1,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,1,0,0,1,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet20_0" (formula "24") (term "1,1,0,0,0,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "0,0,1,1,0,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,0,0,1,1,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,1,0,1,0,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,1,0,1,1,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,1,0,0,1,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet20_1" (formula "24") (term "1,1,0,0,0,1,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,0,1,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "0,2,0,0,0,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "0,2,1,0,0,1,1,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "24") (term "0,2,1,0,1,1,1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "translateJavaSubInt" (formula "24") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "0,2,0,0,0,1,1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,0,2,0,0,0,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "0,2,1,0,0,1,1,1,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,0,2,1,0,0,1,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,1,1,0,0,0,0,1"))
               (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,1,1,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,2,0,1,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,2,1,0,1,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,2,0,0,0,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "0,2,1,0,0,1,1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "polySimp_addComm0" (formula "24") (term "1,1,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,1,0,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,0,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1"))
               (rule "nonNull" (formula "24") (term "0,0") (inst "i=i_1"))
               (rule "greater_literals" (formula "24") (term "0,1,0,0"))
                (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "21")))
               (rule "sub_literals" (formula "24") (term "2,1,0,0,0"))
                (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0"))
               (rule "pullOutSelect" (formula "24") (term "0,1,1,1,0,0,0,1") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnon" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "8")))
               (rule "eqSymm" (formula "1") (term "0,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
               (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "nnf_imp2or" (formula "24") (term "0,1,0"))
               (rule "nnf_imp2or" (formula "24") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "24") (term "1,0,0,1"))
               (rule "nnf_imp2or" (formula "24") (term "0,0,1"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,1"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0,1"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0,1"))
               (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,0,0,0,1"))
               (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0,0,0,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,1,0,0,0,0,0,1"))
               (rule "add_zero_left" (formula "24") (term "0,1,0,0,0,0,0,1"))
               (rule "cut_direct" (formula "12") (term "0"))
               (branch "CUT: self.canvas[0] = null TRUE"
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,0,1") (ifseqformula "12"))
                  (rule "andRight" (formula "24"))
                  (branch "Case 1"
                     (rule "andRight" (formula "24"))
                     (branch "Case 1"
                        (rule "allRight" (formula "24") (inst "sk=i_1_0"))
                        (rule "orRight" (formula "24"))
                        (rule "orRight" (formula "24"))
                        (rule "notRight" (formula "26"))
                        (rule "inEqSimp_leqRight" (formula "25"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "11")))
                        (rule "eqSymm" (formula "3") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "24"))
                        (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                        (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                        (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "12") (term "0,0,1"))
                        (rule "leq_literals" (formula "12") (term "0,1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "24") (inst "sk=i_0_0"))
                        (rule "orRight" (formula "24"))
                        (rule "orRight" (formula "24"))
                        (rule "inEqSimp_leqRight" (formula "24"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "26") (term "0,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "10")))
                        (rule "eqSymm" (formula "27"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                        (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "26"))
                        (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "allLeft" (formula "12") (inst "t=i_0_0"))
                        (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "12") (term "0,0,1"))
                        (rule "leq_literals" (formula "12") (term "0,1"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "24") (inst "sk=j_0"))
                     (rule "allRight" (formula "24") (inst "sk=i_1_0"))
                     (rule "orRight" (formula "24"))
                     (rule "orRight" (formula "24"))
                     (rule "orRight" (formula "26"))
                     (rule "orRight" (formula "24"))
                     (rule "notRight" (formula "27"))
                     (rule "orRight" (formula "28"))
                     (rule "orRight" (formula "25"))
                     (rule "inEqSimp_geqRight" (formula "28"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "28"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "27"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "28"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_2"))
                     (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "5"))
                     (rule "simplifySelectOfAnon" (formula "5"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
                     (rule "eqSymm" (formula "5") (term "0,0"))
                     (rule "sortsDisjointModuloNull" (formula "5") (term "0,0"))
                     (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "27")))
                     (rule "applyEqReverse" (formula "30") (term "1,0,1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "30") (term "1,0,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "pullOutSelect" (formula "30") (term "0,1") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "31") (term "1,0,0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "14")))
                     (rule "eqSymm" (formula "1") (term "0,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                     (rule "applyEqReverse" (formula "32") (term "1,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "30") (term "0,1") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=arr_6"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "8") (term "0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfAnon" (formula "8"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "9"))
                     (rule "ifEqualsTRUE" (formula "8"))
                     (rule "pullOutSelect" (formula "3") (term "0,0,0,0") (inst "selectSK=arr_8"))
                     (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")) (ifInst ""  (formula "17")))
                     (rule "eqSymm" (formula "4") (term "0,0,0"))
                     (rule "eqSymm" (formula "3") (term "0,0"))
                     (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                     (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "31")))
                     (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "eqSymm" (formula "3") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=arr_9"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "hideAuxiliaryEqConcrete" (formula "10"))
                     (rule "commute_and" (formula "33"))
                     (rule "commute_and" (formula "34"))
                     (rule "arrayLengthIsAnInt" (formula "28") (term "0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                     (rule "cnf_rightDist" (formula "3") (term "0,0"))
                     (rule "cnf_rightDist" (formula "2") (term "0,0"))
                     (rule "cnf_rightDist" (formula "9") (term "0,0"))
                     (rule "commute_or" (formula "3") (term "0,0,0"))
                     (rule "commute_or" (formula "3") (term "1,0,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0"))
                     (rule "commute_or" (formula "2") (term "0,0,0"))
                     (rule "commute_and_2" (formula "9") (term "0"))
                     (rule "commute_or" (formula "9") (term "1,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "4") (term "0,0"))
                     (rule "commute_or" (formula "4") (term "1,0,0"))
                     (rule "commute_or" (formula "4") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "9") (term "0,0,1"))
                     (rule "cnf_rightDist" (formula "1") (term "0,0"))
                     (rule "commute_or" (formula "1") (term "1,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0"))
                     (rule "commute_and" (formula "9") (term "0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,1"))
                     (rule "commute_or" (formula "9") (term "1,0,0,1"))
                     (rule "orLeft" (formula "9"))
                     (branch " (self.canvas[i_1_0]@heap)[j_0]@anon_heap_LOOP<<anonHeapFunction>> = TRUE & ( !self.canvas[i_1_0] = null | self.canvas[i_1_0] = self.canvas[depth]) & ( self.canvas[i_1_0] = self.canvas[depth] | !self.canvas[i_1_0].<created> = TRUE)"
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "11"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "10")))
                        (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "9"))
                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "10")))
                        (rule "applyEqReverse" (formula "34") (term "0,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "allLeft" (formula "19") (inst "t=depth"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                        (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "29"))
                        (rule "eqSymm" (formula "19") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "14"))
                        (rule "qeq_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                        (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "19"))
                        (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "23") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "18"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                        (rule "mul_literals" (formula "4") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                        (rule "mul_literals" (formula "4") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "4"))
                        (rule "leq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "arrayLengthIsAnInt" (formula "23") (term "1,1,1,0,0"))
                         (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "1,1,1,0,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0,1,0,0,0,0,0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "33"))
                         (builtin "One Step Simplification" (formula "29"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "commute_and" (formula "36"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_and" (formula "37"))
                              (rule "allLeft" (formula "20") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "20") (term "1,0"))
                               (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")))
                              (rule "inEqSimp_commuteGeq" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "closeFalse" (formula "20"))
                           )
                           (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "andRight" (formula "31"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "31"))
                                 (rule "notRight" (formula "31"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "32"))
                                 (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "1"))
                                 (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                 (rule "inEqSimp_commuteGeq" (formula "19"))
                                 (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "20") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "31"))
                                 (rule "notRight" (formula "32"))
                                 (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                 (rule "inEqSimp_commuteGeq" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                           )
                        )
                        (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_and" (formula "35"))
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "30"))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "commute_and" (formula "36"))
                                 (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                 (rule "inEqSimp_commuteGeq" (formula "19"))
                                 (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "35"))
                                 (rule "andRight" (formula "30"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "30"))
                                    (rule "notRight" (formula "30"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "20") (term "0"))
                                    (rule "mul_literals" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "30"))
                                    (rule "notRight" (formula "31"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "30"))
                              (rule "notRight" (formula "31"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "commute_and" (formula "37"))
                                 (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                 (rule "inEqSimp_commuteGeq" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "36"))
                                 (rule "andRight" (formula "30"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "30"))
                                    (rule "notRight" (formula "30"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "30"))
                                    (rule "notRight" (formula "31"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                           )
                        )
                     )
                     (branch " !( ( !self.canvas[i_1_0] = null | self.canvas[i_1_0] = self.canvas[depth]) & ( self.canvas[i_1_0] = self.canvas[depth] | !self.canvas[i_1_0].<created> = TRUE)) & self.canvas[i_1_0][j_0] = TRUE"
                        (rule "andLeft" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "33") (term "0,1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "orRight" (formula "28"))
                           (rule "notRight" (formula "28"))
                           (rule "applyEq" (formula "33") (term "1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "29"))
                           (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "17") (term "0,0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "6"))
                           (rule "andLeft" (formula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "17"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0"))
                           (rule "add_literals" (formula "17") (term "0"))
                           (rule "leq_literals" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "28"))
                           (rule "notRight" (formula "29"))
                           (rule "allLeft" (formula "18") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                           (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "28"))
                           (rule "eqSymm" (formula "18") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "22") (term "1,1,1,0,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                           (rule "mul_literals" (formula "5") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "mul_literals" (formula "5") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "5"))
                           (rule "leq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "arrayLengthNotNegative" (formula "22") (term "1,1,1,0,0"))
                           (rule "arrayLengthIsAnInt" (formula "22") (term "1,1,1,0,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "1,0,0,0,0") (ifseqformula "10"))
                           (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "33"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_and" (formula "36"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "commute_and" (formula "37"))
                                 (rule "allLeft" (formula "19") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "19") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "24")))
                                 (rule "inEqSimp_commuteGeq" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                              (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "andRight" (formula "30"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "30"))
                                    (rule "notRight" (formula "30"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "31"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "1"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "19") (term "0"))
                                    (rule "mul_literals" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "30"))
                                    (rule "notRight" (formula "31"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                              )
                           )
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_and" (formula "35"))
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "29"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "orRight" (formula "29"))
                                       (rule "notRight" (formula "29"))
                                       (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "17") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
                                       (rule "inEqSimp_commuteGeq" (formula "17"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "19") (term "0"))
                                       (rule "times_zero_2" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "29"))
                                       (rule "notRight" (formula "30"))
                                       (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "17") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
                                       (rule "inEqSimp_commuteGeq" (formula "17"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "29"))
                                 (rule "notRight" (formula "30"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "commute_and" (formula "37"))
                                    (rule "allLeft" (formula "18") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "18") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")))
                                    (rule "inEqSimp_commuteGeq" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "orRight" (formula "29"))
                                       (rule "notRight" (formula "29"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "30"))
                                       (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "1"))
                                       (rule "commute_and" (formula "36"))
                                       (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "17") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
                                       (rule "inEqSimp_commuteGeq" (formula "17"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                                       (rule "mul_literals" (formula "18") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "29"))
                                       (rule "notRight" (formula "30"))
                                       (rule "allLeft" (formula "17") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "17") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "22")))
                                       (rule "inEqSimp_commuteGeq" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "CUT: self.canvas[0] = null FALSE"
                   (builtin "One Step Simplification" (formula "12"))
                  (rule "andRight" (formula "25"))
                  (branch "Case 1"
                     (rule "andRight" (formula "25"))
                     (branch "Case 1"
                        (rule "allRight" (formula "25") (inst "sk=i_1_0"))
                        (rule "orRight" (formula "25"))
                        (rule "orRight" (formula "25"))
                        (rule "notRight" (formula "27"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnon" (formula "3"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")) (ifInst ""  (formula "11")))
                        (rule "eqSymm" (formula "3") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                        (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "25"))
                        (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                        (rule "allLeft" (formula "12") (inst "t=i_1_0"))
                        (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "12") (term "0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
                        (rule "andLeft" (formula "12"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                        (rule "add_literals" (formula "12") (term "1,1,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0"))
                        (rule "add_literals" (formula "12") (term "0"))
                        (rule "leq_literals" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "25") (inst "sk=i_0_0"))
                        (rule "orRight" (formula "25"))
                        (rule "orRight" (formula "25"))
                        (rule "inEqSimp_geqRight" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=arr_2"))
                        (rule "simplifySelectOfAnon" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")) (ifInst ""  (formula "10")))
                        (rule "eqSymm" (formula "28"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                        (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "27"))
                        (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                        (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                        (rule "allLeft" (formula "12") (inst "t=i_0_0"))
                        (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "28"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "12") (term "0,0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "12"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "25") (inst "sk=j_0"))
                     (rule "allRight" (formula "25") (inst "sk=i_1_0"))
                     (rule "orRight" (formula "25"))
                     (rule "orRight" (formula "25"))
                     (rule "orRight" (formula "27"))
                     (rule "orRight" (formula "25"))
                     (rule "notRight" (formula "28"))
                     (rule "orRight" (formula "29"))
                     (rule "orRight" (formula "26"))
                     (rule "inEqSimp_geqRight" (formula "29"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "29"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "29"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_leqRight" (formula "29"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "pullOutSelect" (formula "5") (term "1,0") (inst "selectSK=arr_2"))
                     (rule "applyEq" (formula "31") (term "1,0,1") (ifseqformula "5"))
                     (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "5"))
                     (rule "simplifySelectOfAnon" (formula "5"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "28")) (ifInst ""  (formula "13")))
                     (rule "eqSymm" (formula "5") (term "0,0"))
                     (rule "sortsDisjointModuloNull" (formula "5") (term "0,0"))
                     (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "30"))
                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "28")))
                     (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,1") (ifseqformula "5"))
                     (rule "applyEqReverse" (formula "31") (term "1,0,0") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "pullOutSelect" (formula "31") (term "0,0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "32") (term "0,1") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "7") (term "0") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnon" (formula "7"))
                      (builtin "One Step Simplification" (formula "7"))
                     (rule "applyEq" (formula "7") (term "1") (ifseqformula "8"))
                     (rule "ifEqualsTRUE" (formula "7"))
                     (rule "pullOutSelect" (formula "33") (term "0,1") (inst "selectSK=arr_6"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "4") (term "1,1,0") (inst "selectSK=arr_8"))
                     (rule "applyEq" (formula "5") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "4"))
                     (rule "simplifySelectOfAnon" (formula "4"))
                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "33")) (ifInst ""  (formula "18")))
                     (rule "eqSymm" (formula "5") (term "0,0,0"))
                     (rule "eqSymm" (formula "4") (term "0,0"))
                     (rule "sortsDisjointModuloNull" (formula "4") (term "0,0"))
                     (rule "replace_known_right" (formula "4") (term "0,0,0") (ifseqformula "35"))
                      (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "33")))
                     (rule "applyEqReverse" (formula "5") (term "1,0,0,1,1,0,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "5") (term "1,0,0,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "5") (term "1,1,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "5") (term "0,0,0,1,0,0") (ifseqformula "4"))
                     (rule "applyEqReverse" (formula "5") (term "1,2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "eqSymm" (formula "4") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "3") (term "0,0,0,1,0,0") (inst "selectSK=arr_9"))
                     (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "1,2,0") (ifseqformula "3"))
                     (rule "simplifySelectOfAnon" (formula "3"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "18")))
                     (rule "eqSymm" (formula "4") (term "0,0,0"))
                     (rule "eqSymm" (formula "3") (term "0,0"))
                     (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                     (rule "applyEqReverse" (formula "4") (term "1,0,0,1,1,0,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "0,0,0,1,0,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,0,0,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "4") (term "1,2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "eqSymm" (formula "3") (term "0,0,0"))
                     (rule "hideAuxiliaryEqConcrete" (formula "10"))
                     (rule "commute_and" (formula "34"))
                     (rule "cnf_rightDist" (formula "9") (term "0,0"))
                     (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                     (rule "arrayLengthIsAnInt" (formula "28") (term "0"))
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "cnf_rightDist" (formula "2") (term "0,0"))
                     (rule "cnf_rightDist" (formula "1") (term "0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0"))
                     (rule "commute_or" (formula "9") (term "1,0,0"))
                     (rule "cnf_rightDist" (formula "9") (term "0,0,1"))
                     (rule "commute_or" (formula "2") (term "0,0,0"))
                     (rule "commute_or" (formula "2") (term "1,0,0"))
                     (rule "commute_or" (formula "1") (term "1,0,0"))
                     (rule "commute_or" (formula "1") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "4") (term "0,0"))
                     (rule "commute_and_2" (formula "9") (term "0"))
                     (rule "commute_or" (formula "4") (term "1,0,0"))
                     (rule "commute_or" (formula "4") (term "0,0,0"))
                     (rule "cnf_rightDist" (formula "3") (term "0,0"))
                     (rule "commute_or" (formula "3") (term "0,0,0"))
                     (rule "commute_or" (formula "3") (term "1,0,0"))
                     (rule "commute_or" (formula "9") (term "0,0,0,1"))
                     (rule "commute_or" (formula "9") (term "1,0,0,1"))
                     (rule "commute_and" (formula "9") (term "0,0"))
                     (rule "orLeft" (formula "9"))
                     (branch " (self.canvas[i_1_0]@heap)[j_0]@anon_heap_LOOP<<anonHeapFunction>> = TRUE & ( !self.canvas[i_1_0] = null | self.canvas[i_1_0] = self.canvas[depth]) & ( self.canvas[i_1_0] = self.canvas[depth] | !self.canvas[i_1_0].<created> = TRUE)"
                        (rule "andLeft" (formula "9"))
                        (rule "andLeft" (formula "9"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                        (rule "applyEqReverse" (formula "36") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                        (rule "applyEqReverse" (formula "35") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "allLeft" (formula "19") (inst "t=depth"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                        (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "29"))
                        (rule "eqSymm" (formula "19") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "14"))
                        (rule "qeq_literals" (formula "19") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "17"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0"))
                        (rule "leq_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                        (rule "applyEq" (formula "26") (term "1,1,1,0,0,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "23") (term "1,1,1,0,0,0,0") (ifseqformula "19"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "19"))
                        (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "18"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "18"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "18"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1"))
                        (rule "polySimp_rightDist" (formula "5") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                        (rule "mul_literals" (formula "5") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "5"))
                        (rule "mul_literals" (formula "3") (term "0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "3"))
                        (rule "leq_literals" (formula "28") (term "0"))
                         (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "commute_and" (formula "36"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "allLeft" (formula "31") (inst "t=depth"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "19"))
                              (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                              (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                              (rule "add_literals" (formula "31") (term "0,0,1"))
                              (rule "leq_literals" (formula "31") (term "0,1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "17"))
                              (rule "qeq_literals" (formula "31") (term "0,1"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_10"))
                              (rule "simplifySelectOfAnon" (formula "31"))
                               (builtin "One Step Simplification" (formula "31"))
                              (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                              (rule "hideAuxiliaryEq" (formula "31"))
                              (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                              (rule "add_literals" (formula "32") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                              (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "32") (term "0,1,0"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                              (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,1"))
                              (rule "leq_literals" (formula "32") (term "0,1"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_11"))
                              (rule "simplifySelectOfAnon" (formula "32"))
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                              (rule "hideAuxiliaryEq" (formula "32"))
                              (rule "allLeft" (formula "33") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                              (rule "add_literals" (formula "33") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "33") (term "0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                              (rule "inEqSimp_invertInEq1" (formula "33") (term "1,0"))
                              (rule "mul_literals" (formula "33") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                              (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                              (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                              (rule "add_literals" (formula "33") (term "0,0,1"))
                              (rule "leq_literals" (formula "33") (term "0,1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "33") (term "0,1"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_12"))
                              (rule "simplifySelectOfAnon" (formula "33"))
                               (builtin "One Step Simplification" (formula "33"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                              (rule "hideAuxiliaryEq" (formula "33"))
                              (rule "allLeft" (formula "34") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                              (rule "add_literals" (formula "34") (term "0,0,1"))
                              (rule "leq_literals" (formula "34") (term "0,1"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "34") (term "0,1"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_13"))
                              (rule "simplifySelectOfAnon" (formula "34"))
                               (builtin "One Step Simplification" (formula "34"))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                              (rule "hideAuxiliaryEq" (formula "34"))
                              (rule "allLeft" (formula "35") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "35") (term "1,0"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "35") (term "0,1"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_14"))
                              (rule "simplifySelectOfAnon" (formula "35"))
                               (builtin "One Step Simplification" (formula "35"))
                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                              (rule "hideAuxiliaryEq" (formula "35"))
                              (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0"))
                              (rule "leq_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,0,1,0"))
                              (rule "add_zero_left" (formula "20") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                              (rule "inEqSimp_invertInEq1" (formula "20") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                              (rule "mul_literals" (formula "20") (term "1,1,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                              (rule "inEqSimp_contradInEq0" (formula "20") (term "1") (ifseqformula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                              (rule "add_literals" (formula "20") (term "0,0,1"))
                              (rule "leq_literals" (formula "20") (term "0,1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "20") (term "0,1"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                              (rule "inEqSimp_invertInEq1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "22") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0"))
                              (rule "leq_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                              (rule "add_literals" (formula "19") (term "0,0,1,0"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                              (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                              (rule "add_literals" (formula "19") (term "0,0,1"))
                              (rule "leq_literals" (formula "19") (term "0,1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "19") (term "0,1"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "38"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1"))
                              (rule "leq_literals" (formula "18") (term "0,1"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "18") (term "0,1"))
                               (builtin "One Step Simplification" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "37"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                              (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "21") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "6"))
                              (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0"))
                              (rule "leq_literals" (formula "21") (term "0,0"))
                               (builtin "One Step Simplification" (formula "21"))
                              (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                              (rule "leq_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "22") (term "0,0"))
                               (builtin "One Step Simplification" (formula "22"))
                              (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "22"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "7"))
                              (rule "polySimp_addComm1" (formula "7") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1"))
                              (rule "polySimp_rightDist" (formula "7") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                              (rule "mul_literals" (formula "7") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "3"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                              (rule "mul_literals" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "mul_literals" (formula "5") (term "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                              (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "36"))
                              (rule "cut_direct" (formula "9") (term "0,1"))
                              (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "9"))
                                 (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                                 (rule "allLeft" (formula "36") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                 (rule "replaceKnownSelect_taclet0001100020_22" (formula "36") (term "0,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0001100020_23" (formula "36") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "30"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "cut_direct" (formula "2") (term "0,1"))
                                 (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "3"))
                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "9"))
                                     (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "2"))
                                    (rule "cut_direct" (formula "1") (term "0,1"))
                                    (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "40") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "40") (ifseqformula "8"))
                                    )
                                    (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "referencedObjectIsCreatedRight" (formula "36") (ifseqformula "37"))
                                       (rule "close" (formula "36") (ifseqformula "10"))
                                    )
                                 )
                                 (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "39"))
                                    (rule "close" (formula "37") (ifseqformula "10"))
                                 )
                              )
                              (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                 (rule "close" (formula "38") (ifseqformula "10"))
                              )
                           )
                           (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "andRight" (formula "30"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "30"))
                                 (rule "notRight" (formula "30"))
                                 (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "7"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "30"))
                                 (rule "notRight" (formula "31"))
                                 (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                 (rule "leq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "31") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "31") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnon" (formula "31"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "32") (term "1,0"))
                                 (rule "mul_literals" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                 (rule "leq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnon" (formula "32"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "16"))
                                 (rule "qeq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnon" (formula "33"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                 (rule "leq_literals" (formula "34") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "34") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnon" (formula "34"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0,0,0,0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "41"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "23") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "23") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "5") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "cut_direct" (formula "9") (term "0,1"))
                                 (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "9"))
                                    (rule "cut_direct" (formula "2") (term "0,1"))
                                    (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "43") (term "1,0,1") (ifseqformula "2"))
                                       (rule "replace_known_left" (formula "43") (term "1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "allLeft" (formula "35") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                       (rule "replaceKnownSelect_taclet11001100020_28" (formula "35") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet11001100020_29" (formula "35") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                       (rule "leq_literals" (formula "35") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "35") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_15"))
                                       (rule "simplifySelectOfAnon" (formula "35"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "allLeft" (formula "36") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "36") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "36") (term "1,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                       (rule "leq_literals" (formula "36") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "36") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_16"))
                                       (rule "simplifySelectOfAnon" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                       (rule "close" (formula "45") (ifseqformula "37"))
                                    )
                                    (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "39"))
                                       (rule "close" (formula "37") (ifseqformula "10"))
                                    )
                                 )
                                 (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                    (rule "close" (formula "38") (ifseqformula "10"))
                                 )
                              )
                           )
                        )
                        (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "commute_and" (formula "35"))
                           (rule "andRight" (formula "29"))
                           (branch "Case 1"
                              (rule "orRight" (formula "29"))
                              (rule "notRight" (formula "29"))
                              (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "30"))
                              (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "commute_and" (formula "36"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "19") (term "0"))
                                 (rule "mul_literals" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                              (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "commute_and" (formula "35"))
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "29"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "35"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                                    (rule "times_zero_2" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "19"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0"))
                                    (rule "add_literals" (formula "6") (term "0"))
                                    (rule "leq_literals" (formula "6"))
                                    (rule "closeFalse" (formula "6"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "30"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                                    (rule "times_zero_2" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "29"))
                              (rule "notRight" (formula "30"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "commute_and" (formula "37"))
                                 (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                 (rule "leq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "31") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "31") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnon" (formula "31"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                 (rule "leq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnon" (formula "32"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "16"))
                                 (rule "qeq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnon" (formula "33"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,1,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "34") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                 (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                 (rule "leq_literals" (formula "34") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnon" (formula "34"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "1,0,0,0,0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "41"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "allLeft" (formula "21") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "23") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "40"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "allLeft" (formula "23") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "23") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteGeq" (formula "23") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "23") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "23"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "cut_direct" (formula "9") (term "0,1"))
                                 (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "10"))
                                    (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "9"))
                                    (rule "cut_direct" (formula "2") (term "0,1"))
                                    (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "2"))
                                       (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "8"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "2"))
                                       (rule "allLeft" (formula "35") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                       (rule "replaceKnownSelect_taclet01101100020_28" (formula "35") (term "0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet01101100020_29" (formula "35") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                       (rule "leq_literals" (formula "35") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "35") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_15"))
                                       (rule "simplifySelectOfAnon" (formula "35"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "replace_known_left" (formula "43") (term "0") (ifseqformula "35"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "allLeft" (formula "36") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "36") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "36") (term "1,0"))
                                       (rule "mul_literals" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                       (rule "leq_literals" (formula "36") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_16"))
                                       (rule "simplifySelectOfAnon" (formula "36"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                       (rule "close" (formula "45") (ifseqformula "37"))
                                    )
                                    (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                                       (rule "close" (formula "37") (ifseqformula "10"))
                                    )
                                 )
                                 (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "40"))
                                    (rule "close" (formula "38") (ifseqformula "10"))
                                 )
                              )
                              (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "29"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "1"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "18"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "30"))
                                    (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "29") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnon" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfAnon" (formula "30"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                    (rule "hideAuxiliaryEq" (formula "30"))
                                    (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "31") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "31") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_12"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "allLeft" (formula "32") (inst "t=depth"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "32") (term "0,0,1"))
                                    (rule "leq_literals" (formula "32") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_13"))
                                    (rule "simplifySelectOfAnon" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "33") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_14"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                    (rule "hideAuxiliaryEq" (formula "33"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0,1,0,0,0,0,0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                                    (rule "times_zero_2" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "21") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "22") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "allLeft" (formula "23") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_commuteGeq" (formula "23") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "23"))
                                    (rule "inEqSimp_homoInEq1" (formula "7"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "30") (term "1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "25") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "23"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                    (rule "mul_literals" (formula "7") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "25") (term "0"))
                                     (builtin "One Step Simplification" (formula "25"))
                                    (rule "true_left" (formula "25"))
                                    (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                    (rule "mul_literals" (formula "5") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "cut_direct" (formula "9") (term "0,1"))
                                    (branch "CUT: self.canvas[i_1_0].<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "9"))
                                       (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "9"))
                                       (rule "cut_direct" (formula "46") (term "0"))
                                       (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "allLeft" (formula "37") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                          (rule "replaceKnownSelect_taclet111101100020_28" (formula "37") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111101100020_29" (formula "37") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "hideAuxiliaryEq" (formula "37"))
                                          (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "allLeft" (formula "38") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "38") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "38") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                          (rule "leq_literals" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "38"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "close" (formula "49") (ifseqformula "39"))
                                       )
                                       (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "false_right" (formula "47"))
                                          (rule "allLeft" (formula "36") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                          (rule "replaceKnownSelect_taclet111101100020_28" (formula "36") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet111101100020_29" (formula "36") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "36"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "36"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "37") (term "1,0"))
                                          (rule "mul_literals" (formula "37") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "close" (formula "48") (ifseqformula "38"))
                                       )
                                    )
                                    (branch "CUT: self.canvas[i_1_0].<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                       (rule "close" (formula "38") (ifseqformula "10"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch " !( ( !self.canvas[i_1_0] = null | self.canvas[i_1_0] = self.canvas[depth]) & ( self.canvas[i_1_0] = self.canvas[depth] | !self.canvas[i_1_0].<created> = TRUE)) & self.canvas[i_1_0][j_0] = TRUE"
                        (rule "andLeft" (formula "9"))
                        (rule "notLeft" (formula "9"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "35") (term "0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "orRight" (formula "28"))
                           (rule "notRight" (formula "28"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                           (rule "eqSymm" (formula "29"))
                           (rule "applyEq" (formula "33") (term "1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "33") (term "1,0,0") (ifseqformula "1"))
                           (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "6"))
                           (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                           (rule "add_literals" (formula "17") (term "0,0,1"))
                           (rule "leq_literals" (formula "17") (term "0,1"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "4"))
                           (rule "qeq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "closeFalse" (formula "17"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "28"))
                           (rule "notRight" (formula "29"))
                           (rule "allLeft" (formula "18") (inst "t=depth"))
                           (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                           (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "28"))
                           (rule "eqSymm" (formula "18") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "13"))
                           (rule "qeq_literals" (formula "18") (term "0,0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "24") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "6"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "23") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "18"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "21") (term "1,1,1,0,0,0,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "17"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                           (rule "mul_literals" (formula "6") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "6"))
                           (rule "mul_literals" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "4"))
                           (rule "leq_literals" (formula "27") (term "0"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) TRUE"
                              (rule "andLeft" (formula "3"))
                              (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "commute_and" (formula "36"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                 (rule "leq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "30") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfAnon" (formula "30"))
                                  (builtin "One Step Simplification" (formula "30"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                 (rule "hideAuxiliaryEq" (formula "30"))
                                 (rule "allLeft" (formula "31") (inst "t=depth"))
                                 (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "18"))
                                 (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                 (rule "leq_literals" (formula "31") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "16"))
                                 (rule "qeq_literals" (formula "31") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnon" (formula "31"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "hideAuxiliaryEq" (formula "31"))
                                 (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                 (rule "leq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "32") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_12"))
                                 (rule "simplifySelectOfAnon" (formula "32"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                 (rule "hideAuxiliaryEq" (formula "32"))
                                 (rule "allLeft" (formula "33") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "33") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                 (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                 (rule "leq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "33") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnon" (formula "33"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "allLeft" (formula "34") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "34") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "34") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_14"))
                                 (rule "simplifySelectOfAnon" (formula "34"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0,1,0,0,0,0,0") (ifseqformula "12"))
                                 (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "41"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "9"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                 (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "18") (term "0,0,1"))
                                 (rule "leq_literals" (formula "18") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                 (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                                 (rule "times_zero_2" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "20") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                 (rule "mul_literals" (formula "6") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "cut_direct" (formula "46") (term "0"))
                                 (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "cut_direct" (formula "4") (term "0,1"))
                                    (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "4"))
                                       (rule "cut_direct" (formula "3") (term "0,1"))
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                          (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "36"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "allLeft" (formula "37") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "37") (term "1,0"))
                                          (rule "times_zero_2" (formula "37") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "hideAuxiliaryEq" (formula "37"))
                                          (rule "allLeft" (formula "38") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                          (rule "leq_literals" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_17"))
                                          (rule "simplifySelectOfAnon" (formula "38"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "close" (formula "48") (ifseqformula "39"))
                                       )
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                          (rule "close" (formula "38") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "40"))
                                       (rule "close" (formula "39") (ifseqformula "11"))
                                    )
                                 )
                                 (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "false_right" (formula "47"))
                                    (rule "cut_direct" (formula "3") (term "0,1"))
                                    (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "4"))
                                       (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                       (rule "cut_direct" (formula "2") (term "0,1"))
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "2"))
                                          (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                          (rule "leq_literals" (formula "35") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "35") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "35"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
                                          (rule "hideAuxiliaryEq" (formula "35"))
                                          (rule "allLeft" (formula "36") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "36"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "close" (formula "46") (ifseqformula "37"))
                                       )
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "referencedObjectIsCreatedRight" (formula "37") (ifseqformula "38"))
                                          (rule "close" (formula "37") (ifseqformula "10"))
                                       )
                                    )
                                    (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                       (rule "close" (formula "38") (ifseqformula "10"))
                                    )
                                 )
                              )
                              (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "29"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "applyEq" (formula "36") (term "1,0,0") (ifseqformula "1"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "8"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0"))
                                    (rule "add_literals" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "Case 2"
                                    (rule "orRight" (formula "29"))
                                    (rule "notRight" (formula "30"))
                                    (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "29") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnon" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "30") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfAnon" (formula "30"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                    (rule "hideAuxiliaryEq" (formula "30"))
                                    (rule "allLeft" (formula "31") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "31") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "31") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_12"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "allLeft" (formula "32") (inst "t=depth"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "32") (term "0,0,1"))
                                    (rule "leq_literals" (formula "32") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_13"))
                                    (rule "simplifySelectOfAnon" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_14"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                    (rule "hideAuxiliaryEq" (formula "33"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0,1,0,0,0,0,0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                    (rule "times_zero_2" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "20") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                    (rule "polySimp_addComm1" (formula "9") (term "0"))
                                    (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                    (rule "mul_literals" (formula "9") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "9"))
                                    (rule "mul_literals" (formula "7") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                    (rule "mul_literals" (formula "7") (term "1"))
                                    (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                    (rule "leq_literals" (formula "23") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "23"))
                                    (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "39"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "cut_direct" (formula "47") (term "0"))
                                    (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "cut_direct" (formula "4") (term "0,1"))
                                       (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "48") (term "1,0,1") (ifseqformula "5"))
                                          (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                          (rule "allLeft" (formula "37") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                          (rule "replaceKnownSelect_taclet110111100020_28" (formula "37") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110111100020_29" (formula "37") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "hideAuxiliaryEq" (formula "37"))
                                          (rule "allLeft" (formula "38") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "38") (term "1,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                          (rule "leq_literals" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "38"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "allLeft" (formula "39") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                          (rule "leq_literals" (formula "39") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_17"))
                                          (rule "simplifySelectOfAnon" (formula "39"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "allLeft" (formula "26") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "23") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "24") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                          (rule "leq_literals" (formula "24") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "25") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "25") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "18") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                          (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
                                          (rule "true_left" (formula "10"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "11"))
                                          (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
                                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "49")))
                                          (rule "true_left" (formula "2"))
                                          (rule "allLeft" (formula "32") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "32") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "32") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "commute_or_2" (formula "32") (term "0,0,0"))
                                          (rule "arrayLengthIsAnInt" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthIsAnInt" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "arrayLengthIsAnInt" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "allLeft" (formula "31") (inst "t=i_1_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "31") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "31") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                          (rule "allLeft" (formula "32") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,2,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,2,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                          (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "32") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "commute_or_2" (formula "32") (term "0,0,0,0"))
                                          (rule "allLeft" (formula "35") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,2,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,2,0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,2,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "35") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "35"))
                                          (rule "commute_or_2" (formula "35") (term "0,0,0,0"))
                                          (rule "commute_or" (formula "35") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "29") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0,0,0") (ifseqformula "10"))
                                           (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "29"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                          (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0"))
                                          (rule "add_literals" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "closeFalse" (formula "8"))
                                       )
                                       (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "40"))
                                          (rule "close" (formula "39") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "cut_direct" (formula "3") (term "0,1"))
                                       (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "3"))
                                          (rule "allLeft" (formula "36") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                          (rule "replaceKnownSelect_taclet110111100020_28" (formula "36") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet110111100020_29" (formula "36") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "36"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "allLeft" (formula "37") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "hideAuxiliaryEq" (formula "37"))
                                          (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "allLeft" (formula "24") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "24") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "24") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "22") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "22") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "17") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "commute_or_2" (formula "26") (term "0,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "allLeft" (formula "28") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "28") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                          (rule "allLeft" (formula "30") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "30") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "30"))
                                          (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "48"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "9"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "2"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                          (rule "true_left" (formula "1"))
                                          (rule "allLeft" (formula "26") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "26") (term "0,0,0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "26") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "7"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                       (branch "CUT: self.canvas[-1 + i_1_0].<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                          (rule "close" (formula "38") (ifseqformula "10"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch " ( !self.canvas[-1 + i_1_0] = null | self.canvas[-1 + i_1_0] = self.canvas[depth]) & ( self.canvas[-1 + i_1_0] = self.canvas[depth] | !self.canvas[-1 + i_1_0].<created> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "commute_and" (formula "35"))
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                 (rule "orRight" (formula "28"))
                                 (rule "notRight" (formula "28"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "commute_and" (formula "36"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "0"))
                                    (rule "mul_literals" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "35"))
                                    (rule "andRight" (formula "28"))
                                    (branch "Case 1"
                                       (rule "orRight" (formula "28"))
                                       (rule "notRight" (formula "28"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "times_zero_2" (formula "17") (term "1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "18"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0"))
                                       (rule "add_zero_right" (formula "7") (term "0"))
                                       (rule "leq_literals" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "28"))
                                       (rule "notRight" (formula "29"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "17") (term "0"))
                                       (rule "mul_literals" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "orRight" (formula "28"))
                                 (rule "notRight" (formula "29"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) TRUE"
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "commute_and" (formula "37"))
                                    (rule "allLeft" (formula "29") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
                                    (rule "add_literals" (formula "29") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "29") (term "0,0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "29") (term "1,0"))
                                    (rule "times_zero_2" (formula "29") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "inEqSimp_contradInEq0" (formula "29") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                    (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,1"))
                                    (rule "leq_literals" (formula "29") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnon" (formula "29"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                    (rule "hideAuxiliaryEq" (formula "29"))
                                    (rule "allLeft" (formula "30") (inst "t=depth"))
                                    (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "15"))
                                    (rule "qeq_literals" (formula "30") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfAnon" (formula "30"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                    (rule "hideAuxiliaryEq" (formula "30"))
                                    (rule "allLeft" (formula "31") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "31") (term "0,0,1"))
                                    (rule "leq_literals" (formula "31") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_12"))
                                    (rule "simplifySelectOfAnon" (formula "31"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                    (rule "hideAuxiliaryEq" (formula "31"))
                                    (rule "allLeft" (formula "32") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "32") (term "1,0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "32") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_13"))
                                    (rule "simplifySelectOfAnon" (formula "32"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "33") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_14"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "33"))
                                    (rule "hideAuxiliaryEq" (formula "33"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "1,0,0,0,0") (ifseqformula "11"))
                                    (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "allLeft" (formula "18") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "18") (term "0,0,1"))
                                    (rule "leq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                    (rule "qeq_literals" (formula "18") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "19") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0"))
                                    (rule "leq_literals" (formula "19") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "19"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                    (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "leq_literals" (formula "20") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "22") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "22"))
                                    (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                    (rule "mul_literals" (formula "8") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                    (rule "mul_literals" (formula "6") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "add_literals" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "mul_literals" (formula "6") (term "1"))
                                    (rule "cut_direct" (formula "47") (term "0"))
                                    (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "cut_direct" (formula "4") (term "0,1"))
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "38") (term "0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "47") (term "1,0,1") (ifseqformula "4"))
                                          (rule "allLeft" (formula "37") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                          (rule "replaceKnownSelect_taclet011111100020_24" (formula "37") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet011111100020_25" (formula "37") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "32"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "true_left" (formula "37"))
                                          (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "hideAuxiliaryEq" (formula "37"))
                                          (rule "allLeft" (formula "38") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "38") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                          (rule "leq_literals" (formula "38") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "38"))
                                           (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "allLeft" (formula "39") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                          (rule "leq_literals" (formula "39") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "39") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_17"))
                                          (rule "simplifySelectOfAnon" (formula "39"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "39"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "allLeft" (formula "23") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "24") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                          (rule "inEqSimp_invertInEq1" (formula "24") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                          (rule "leq_literals" (formula "24") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                          (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0"))
                                          (rule "leq_literals" (formula "25") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "allLeft" (formula "18") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                          (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                          (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                          (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "18") (term "0,0,1"))
                                          (rule "leq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "18") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "notLeft" (formula "18"))
                                          (rule "allLeft" (formula "31") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "31") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "31") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "31"))
                                          (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                                           (builtin "One Step Simplification" (formula "21"))
                                          (rule "true_left" (formula "21"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "3")))
                                          (rule "true_left" (formula "10"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                          (rule "true_left" (formula "1"))
                                          (rule "commute_or_2" (formula "31") (term "0,0,0"))
                                          (rule "arrayLengthIsAnInt" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                          (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "arrayLengthIsAnInt" (formula "24") (term "0"))
                                           (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "allLeft" (formula "29") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "29") (term "1,0") (ifseqformula "9"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "29") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "29") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "29") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "29"))
                                          (rule "commute_or_2" (formula "29") (term "0,0,0"))
                                          (rule "arrayLengthIsAnInt" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                          (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                          (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "25") (term "0"))
                                           (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "allLeft" (formula "32") (inst "t=i_1_0"))
                                          (rule "replace_known_right" (formula "32") (term "1,0,0") (ifseqformula "59"))
                                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "10")) (ifInst ""  (formula "58")))
                                          (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                          (rule "leq_literals" (formula "32") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "32") (term "0"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "closeFalse" (formula "32"))
                                       )
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "referencedObjectIsCreatedRight" (formula "39") (ifseqformula "40"))
                                          (rule "close" (formula "39") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                        (builtin "One Step Simplification" (formula "48"))
                                       (rule "false_right" (formula "48"))
                                       (rule "cut_direct" (formula "3") (term "0,1"))
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "46") (term "1,0,1") (ifseqformula "3"))
                                          (rule "allLeft" (formula "36") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                          (rule "replaceKnownSelect_taclet011111100020_24" (formula "36") (term "0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet011111100020_25" (formula "36") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "31"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "allLeft" (formula "36") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "36") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "36") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                          (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                          (rule "leq_literals" (formula "36") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnon" (formula "36"))
                                           (builtin "One Step Simplification" (formula "36"))
                                          (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "36"))
                                          (rule "hideAuxiliaryEq" (formula "36"))
                                          (rule "allLeft" (formula "37") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                          (rule "leq_literals" (formula "37") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnon" (formula "37"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                          (rule "hideAuxiliaryEq" (formula "37"))
                                          (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "37"))
                                           (builtin "One Step Simplification" (formula "48"))
                                          (rule "allLeft" (formula "22") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "22") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "allLeft" (formula "17") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                          (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "17") (term "0,0,1"))
                                          (rule "leq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "17") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "17"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), j_0)"))
                                          (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,1,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "28") (inst "t=j_0"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "28") (term "0,1,0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (term "1,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "28") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "commute_or_2" (formula "28") (term "0,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                          (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                           (builtin "One Step Simplification" (formula "20"))
                                          (rule "true_left" (formula "20"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "9"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "1,0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                          (rule "true_left" (formula "1"))
                                          (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                          (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "4"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "allLeft" (formula "28") (inst "t=i_1_0"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0,0,0") (ifseqformula "9"))
                                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "53")) (ifInst ""  (formula "54")))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "28") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "7"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                          (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_literals" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                       (branch "CUT: self.canvas[1 + i_1_0].<created> = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "referencedObjectIsCreatedRight" (formula "38") (ifseqformula "39"))
                                          (rule "close" (formula "38") (ifseqformula "10"))
                                       )
                                    )
                                 )
                                 (branch " ( !self.canvas[1 + i_1_0] = null | self.canvas[1 + i_1_0] = self.canvas[depth]) & ( self.canvas[1 + i_1_0] = self.canvas[depth] | !self.canvas[1 + i_1_0].<created> = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "37") (term "0,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "andRight" (formula "28"))
                                    (branch "Case 1"
                                       (rule "orRight" (formula "28"))
                                       (rule "notRight" (formula "28"))
                                       (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "28"))
                                       (rule "notRight" (formula "29"))
                                       (rule "allLeft" (formula "28") (inst "t=i_1_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                       (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "28") (term "0,0,1"))
                                       (rule "leq_literals" (formula "28") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "28") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=arr_10"))
                                       (rule "simplifySelectOfAnon" (formula "28"))
                                        (builtin "One Step Simplification" (formula "28"))
                                       (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "28"))
                                       (rule "hideAuxiliaryEq" (formula "28"))
                                       (rule "allLeft" (formula "29") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "29") (term "1,0"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "29") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=arr_11"))
                                       (rule "simplifySelectOfAnon" (formula "29"))
                                        (builtin "One Step Simplification" (formula "29"))
                                       (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "29"))
                                       (rule "hideAuxiliaryEq" (formula "29"))
                                       (rule "allLeft" (formula "30") (inst "t=depth"))
                                       (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "16"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "14"))
                                       (rule "qeq_literals" (formula "30") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_12"))
                                       (rule "simplifySelectOfAnon" (formula "30"))
                                        (builtin "One Step Simplification" (formula "30"))
                                       (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "30"))
                                       (rule "hideAuxiliaryEq" (formula "30"))
                                       (rule "allLeft" (formula "31") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "31") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "31") (term "0,0,1"))
                                       (rule "leq_literals" (formula "31") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=arr_13"))
                                       (rule "simplifySelectOfAnon" (formula "31"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "31"))
                                       (rule "hideAuxiliaryEq" (formula "31"))
                                       (rule "allLeft" (formula "32") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "32") (term "1,0"))
                                       (rule "times_zero_2" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "32") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "32") (term "0,0,1"))
                                       (rule "leq_literals" (formula "32") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "32") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=arr_14"))
                                       (rule "simplifySelectOfAnon" (formula "32"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "32"))
                                       (rule "hideAuxiliaryEq" (formula "32"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "1,0,0,0,0") (ifseqformula "10"))
                                       (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "41"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_1_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "17") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_invertInEq1" (formula "17") (term "1,0"))
                                       (rule "times_zero_2" (formula "17") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "allLeft" (formula "20") (inst "t=add(Z(neglit(1(#))), i_1_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                       (rule "add_zero_left" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "20") (term "0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,1,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "20") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "allLeft" (formula "21") (inst "t=i_1_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                       (rule "leq_literals" (formula "21") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "21"))
                                       (rule "allLeft" (formula "22") (inst "t=Z(0(#))"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_commuteGeq" (formula "22") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "22"))
                                       (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_addComm1" (formula "8") (term "0"))
                                       (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "22"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1"))
                                       (rule "mul_literals" (formula "8") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                       (rule "mul_literals" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "cut_direct" (formula "48") (term "0"))
                                       (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE TRUE"
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "cut_direct" (formula "50") (term "0"))
                                          (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "allLeft" (formula "39") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                             (rule "replaceKnownSelect_taclet1111111100020_26" (formula "39") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111100020_27" (formula "39") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "39") (term "0,0") (ifseqformula "35"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "39") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnon" (formula "39"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                             (rule "hideAuxiliaryEq" (formula "39"))
                                             (rule "allLeft" (formula "40") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,1"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "40") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "40") (term "0,1"))
                                             (rule "inEqSimp_invertInEq1" (formula "40") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                             (rule "leq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "1") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfAnon" (formula "40"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                                             (rule "hideAuxiliaryEq" (formula "40"))
                                             (rule "allLeft" (formula "41") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq0" (formula "41") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_17"))
                                             (rule "simplifySelectOfAnon" (formula "41"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                                             (rule "hideAuxiliaryEq" (formula "41"))
                                             (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                             (rule "leq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "19") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "19") (term "0,0,1"))
                                             (rule "leq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "allLeft" (formula "19") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0,1"))
                                             (rule "inEqSimp_invertInEq1" (formula "19") (term "1,0"))
                                             (rule "times_zero_2" (formula "19") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "19") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "19") (term "0,0,1"))
                                             (rule "leq_literals" (formula "19") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "notLeft" (formula "19"))
                                             (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "26") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "27") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "allLeft" (formula "33") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "33") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "33") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "arrayLengthIsAnInt" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                             (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "1,0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "53"))
                                              (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "5")))
                                             (rule "true_left" (formula "11"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "5"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                             (rule "true_left" (formula "1"))
                                             (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "arrayLengthIsAnInt" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "allLeft" (formula "33") (inst "t=i_1_0"))
                                             (rule "replace_known_right" (formula "33") (term "1,0,0") (ifseqformula "62"))
                                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "11")) (ifInst ""  (formula "61")))
                                             (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,1"))
                                             (rule "leq_literals" (formula "33") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "33") (term "0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "closeFalse" (formula "33"))
                                          )
                                          (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "allLeft" (formula "38") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                             (rule "replaceKnownSelect_taclet1111111100020_26" (formula "38") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111100020_27" (formula "38") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                             (rule "leq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnon" (formula "38"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "allLeft" (formula "39") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,1,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "39") (term "0,0,1"))
                                             (rule "inEqSimp_invertInEq1" (formula "39") (term "1,0"))
                                             (rule "times_zero_2" (formula "39") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfAnon" (formula "39"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                             (rule "hideAuxiliaryEq" (formula "39"))
                                             (rule "allLeft" (formula "40") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "40") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "inEqSimp_contradInEq0" (formula "40") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "40") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "40") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,0,1"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "40") (term "0,0,1"))
                                             (rule "leq_literals" (formula "40") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_17"))
                                             (rule "simplifySelectOfAnon" (formula "40"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "40"))
                                             (rule "hideAuxiliaryEq" (formula "40"))
                                             (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "24") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "24") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "18") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "18") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                             (rule "inEqSimp_invertInEq1" (formula "18") (term "1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "26") (inst "t=add(Z(neglit(1(#))), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                             (rule "inEqSimp_invertInEq1" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                             (rule "times_zero_2" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "26") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0"))
                                             (rule "leq_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "allLeft" (formula "30") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "30") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "52")))
                                             (rule "true_left" (formula "10"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "51")))
                                             (rule "true_left" (formula "2"))
                                             (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                             (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "arrayLengthIsAnInt" (formula "24") (term "0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "allLeft" (formula "33") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "33") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_contradInEq0" (formula "33") (term "1,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "33") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "33") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "33") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "commute_or_2" (formula "33") (term "0,0,0"))
                                             (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "61")) (ifInst ""  (formula "62")))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "30") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "8"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "inEqSimp_homoInEq1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0"))
                                             (rule "add_literals" (formula "30") (term "0"))
                                             (rule "leq_literals" (formula "30"))
                                             (rule "closeFalse" (formula "30"))
                                          )
                                       )
                                       (branch "CUT: self.canvas[i_1_0][1 + j_0] = TRUE FALSE"
                                           (builtin "One Step Simplification" (formula "49"))
                                          (rule "false_right" (formula "49"))
                                          (rule "cut_direct" (formula "49") (term "0"))
                                          (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE TRUE"
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "allLeft" (formula "38") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                             (rule "replaceKnownSelect_taclet1111111100020_26" (formula "38") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111100020_27" (formula "38") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "allLeft" (formula "38") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,1,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                             (rule "leq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnon" (formula "38"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "allLeft" (formula "39") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                             (rule "leq_literals" (formula "39") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfAnon" (formula "39"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "39"))
                                             (rule "hideAuxiliaryEq" (formula "39"))
                                             (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "25") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "25") (term "1,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "25") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "25") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "allLeft" (formula "18") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "18") (term "0,0,1"))
                                             (rule "leq_literals" (formula "18") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "notLeft" (formula "18"))
                                             (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "allLeft" (formula "30") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "9"))
                                             (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "30") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "commute_or_2" (formula "30") (term "0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAnInt" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "1,0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "49")))
                                             (rule "true_left" (formula "10"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "4")))
                                             (rule "true_left" (formula "3"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "11"))
                                             (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "3"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                                             (rule "true_left" (formula "2"))
                                             (rule "allLeft" (formula "30") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "30") (term "0,0,0,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                             (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "30") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "30"))
                                             (rule "andLeft" (formula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "8"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                             (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0"))
                                             (rule "add_literals" (formula "8") (term "0"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "closeFalse" (formula "8"))
                                          )
                                          (branch "CUT: self.canvas[1 + i_1_0][j_0] = TRUE FALSE"
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "allLeft" (formula "37") (inst "t=depth<<origin(\"loop_invariant @ file Drawing.java @ line 44\",\"[]\")>>"))
                                             (rule "replaceKnownSelect_taclet1111111100020_26" (formula "37") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1111111100020_27" (formula "37") (term "0,0,0"))
                                             (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "33"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "allLeft" (formula "37") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,1,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "37") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "37") (term "0,1"))
                                             (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                             (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                             (rule "leq_literals" (formula "37") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnon" (formula "37"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
                                             (rule "hideAuxiliaryEq" (formula "37"))
                                             (rule "allLeft" (formula "38") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                             (rule "leq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "38") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfAnon" (formula "38"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "38"))
                                             (rule "hideAuxiliaryEq" (formula "38"))
                                             (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq0" (formula "17") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "17") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "notLeft" (formula "17"))
                                             (rule "allLeft" (formula "23") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_contradInEq0" (formula "23") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0"))
                                             (rule "leq_literals" (formula "23") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), j_0)"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0"))
                                             (rule "leq_literals" (formula "24") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "24"))
                                             (rule "allLeft" (formula "17") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                             (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "17") (term "0,0,1"))
                                             (rule "leq_literals" (formula "17") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "notLeft" (formula "17"))
                                             (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "arrayLengthIsAnInt" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "27") (inst "t=j_0"))
                                             (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "8"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "27") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "6"))
                                             (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "commute_or_2" (formula "27") (term "0,0,0"))
                                             (rule "arrayLengthIsAnInt" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "4"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "arrayLengthIsAnInt" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "48"))
                                              (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "3")))
                                             (rule "true_left" (formula "9"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "3")))
                                             (rule "true_left" (formula "2"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "1,0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
                                             (rule "true_left" (formula "1"))
                                             (rule "allLeft" (formula "27") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "27"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                             (rule "mul_literals" (formula "7") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                             (rule "add_literals" (formula "7") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0"))
                                             (rule "add_literals" (formula "7") (term "0"))
                                             (rule "leq_literals" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Show Axiom Satisfiability"
                (builtin "One Step Simplification" (formula "24"))
               (rule "closeTrue" (formula "24"))
            )
         )
         (branch "Null Reference (x_arr = null)"
             (builtin "One Step Simplification" (formula "25"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEq" (formula "25") (term "0,1,0,1,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "allLeft" (formula "10") (inst "t=depth"))
            (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "6"))
            (rule "qeq_literals" (formula "10") (term "0,0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "10"))
            (rule "andLeft" (formula "9"))
            (rule "inEqSimp_homoInEq1" (formula "9"))
            (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
            (rule "add_literals" (formula "9") (term "1,1,0"))
            (rule "times_zero_1" (formula "9") (term "1,0"))
            (rule "add_zero_right" (formula "9") (term "0"))
            (rule "leq_literals" (formula "9"))
            (rule "closeFalse" (formula "9"))
         )
      )
      (branch "Null Reference (x_arr_arr = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (x_arr_arr != null, but _depth Out of Bounds!)"
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "6"))
         (rule "qeq_literals" (formula "1") (term "0,1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
         (rule "andLeft" (formula "1"))
         (rule "inEqSimp_homoInEq1" (formula "1"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "1,1,0"))
         (rule "times_zero_1" (formula "1") (term "1,0"))
         (rule "add_zero_right" (formula "1") (term "0"))
         (rule "leq_literals" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Show Axiom Satisfiability"
    (builtin "One Step Simplification" (formula "8"))
   (rule "closeTrue" (formula "8"))
)
)
}
